// Code generated by qtc from "forms.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// All the text outside function templates is treated as comments,
// i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.
//
// .

//line forms.qtpl:5
package js

//line forms.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line forms.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line forms.qtpl:5
func StreamHeadJSForForm(qw422016 *qt422016.Writer, afterAuthURL, changeTheme string) {
//line forms.qtpl:5
	qw422016.N().S(`
<script>
var user = ''
var userStruct
var urlAfterLogin = ''

function fancyOpen(data) {
      $.fancybox.open({
            'autoScale': true,
            'transitionIn': 'elastic',
            'transitionOut': 'elastic',
            'speedIn': 500,
            'speedOut': 300,
            'type':'html',
            'autoDimensions': true,
            'centerOnScroll': true,
            'content' : data
         })
}


function getUser() {
    user = localStorage.getItem("USER")
    if (user > '') {
        userStruct = JSON.parse(user);
        console.log(userStruct);
        document.getElementById('bLogin').textContent = userStruct.name + "(" + userStruct.lang +")";
        token =  userStruct.token
        lang  =  userStruct.lang
        $('.auth').removeClass("auth");
`)
//line forms.qtpl:35
	if changeTheme > "" {
//line forms.qtpl:35
		qw422016.N().S(`        `)
//line forms.qtpl:36
		qw422016.N().S(changeTheme)
//line forms.qtpl:36
		qw422016.N().S(`(userStruct.theme);
`)
//line forms.qtpl:37
	}
//line forms.qtpl:38
	if afterAuthURL > "" {
//line forms.qtpl:38
		qw422016.N().S(`        loadContent("`)
//line forms.qtpl:39
		qw422016.N().S(afterAuthURL)
//line forms.qtpl:39
		qw422016.N().S(`");
`)
//line forms.qtpl:40
	}
//line forms.qtpl:40
	qw422016.N().S(`    }

    return ''
}

var token = '';
var lang  = 'ua'
var isProcess = false;

function setClickAll() {
 if (isProcess) {
   return;
 }

  isProcess = true;

      console.log(event);
      // add onSubmit event instead default behaviourism form
      $('form:not([onsubmit])').on("onsubmit", function () { return saveForm(this); });
       // add click event instead default - response will show on div.#content
     $( 'a[href!="#"]:not([rel]):not(onclick):not([target=_blank])').each( function () {
        var url = this.href
        var target = this.target
        this.rel = 'setClickAll';
        isSearch = (this.target=="search");

        $(this).click( `)
//line forms.qtpl:67
	StreamOverClick(qw422016)
//line forms.qtpl:67
	qw422016.N().S(` )

      })
  isProcess = false;
}

function LoadStyles(id, styles) {
        let $head = $('head > style#' + id);
       if ( $head.length == 0 ) {
            $head = $('head').append('<style type="text/css" id="' + id + '">' + styles + '</style>');
        } else {
            $head.html( styles );
        }
}

var go_history=1;
// Эта функция отрабатывает при перемещении по истории просмотром (кнопки вперед-назад в браузере)
function MyPopState(event) {
    if ( (go_history == 0) || (event.state == null) )
        return true;
    console.log(event);
		document.title = event.title;
    $('#content').html(event.state.data);
}
// смена адресной строки с предотвращением перезагрузки Содержимого
function SetDocumentHash( str_path, data ) {
let root_page ="/";
let default_page = "index.html";
var title = $(data).filter('title').text();

    str_path = GetShortURL( str_path )

if (title === "") {
	title = str_path;
}
	console.log(`)
//line forms.qtpl:67
	qw422016.N().S("`")
//line forms.qtpl:67
	qw422016.N().S(`setHash ${title}`)
//line forms.qtpl:67
	qw422016.N().S("`")
//line forms.qtpl:67
	qw422016.N().S(`)
    var  origin   = document.location.origin + ( str_path[0] == '/' ? '' : "/" )
            + ( ( str_path != root_page ) && (str_path != default_page) ? str_path : '' );
	document.title = title;
    window.history.pushState( {'url':str_path, 'data':data}, document.title, origin );
}
function GetShortURL(str_path) {
	if (str_path > "" ) {
        console.log(str_path)
	    if (str_path.startsWith(document.location.origin)) {
	        return str_path.slice( document.location.origin.length + 1);
        }
        return str_path
    }

	return '/';
}


$(function()   {
    if (!window.onpopstate) {
        window.onpopstate = MyPopState;
	}

	window.addEventListener("beforeunload",  function (evt) {
			  var evt = evt || window.event;

//			  evt.returnValue = "Do you want to do it?";

			  if (evt) {
				var y = evt.pageY || evt.clientY;
				if ( y === undefined) {
					console.log(evt)
				}
				console.log( `)
//line forms.qtpl:67
	qw422016.N().S("`")
//line forms.qtpl:67
	qw422016.N().S(`beforeunload ${document.location} pageY:${y}`)
//line forms.qtpl:67
	qw422016.N().S("`")
//line forms.qtpl:67
	qw422016.N().S(`);
		        evt.preventDefault();
				if (y < 0) {
					return evt.returnValue = "Do you want to close this page?"
				}

				if (document.location.pathname > "/") {
					url = document.location
					document.location.href = document.location.origin;
//					loadContent(url.toString());
//					url.pathname = "/";
					console.log(`)
//line forms.qtpl:67
	qw422016.N().S("`")
//line forms.qtpl:67
	qw422016.N().S(`reload ${url}`)
//line forms.qtpl:67
	qw422016.N().S("`")
//line forms.qtpl:67
	qw422016.N().S(`)
					evt.target.URL = url.origin;
					evt.srcElement.URL = evt.target.URL;
					console.log(evt)
				}
			}
			return false
		})


    console.log('$(document).ready function events!')

    setClickAll();
    if (user == '') {
      getUser();
    }
    $('#content').on('DOMSubtreeModified', setClickAll );

        $("#inpS:not([rel])").on("blur", function(){

          if (event.relatedTarget && event.relatedTarget.className == "suggestions-constraints") {
                    return;
            }
            console.log(event);
            $('select.suggestions-constraints').hide();
        }).on('keyup',function(e){
        var x = event.which || event.keyCode;
            if (x == 40) {
                $("#inpS").unbind("blur");
                $('select.suggestions-constraints').focus();
                $('select.suggestions-constraints option:first').selected();
                return;
            }

             if ($("#inpS").val().length < 2) {
                return true;
             }

             $.ajax({
                 url: "/api/v1/search/list",
                 data: {
                         "lang": lang,
                         "value": $("#inpS").val(),
                         "count": 10,
                         "html": true
                 },
               beforeSend: function (xhr) {
                   xhr.setRequestHeader('Authorization', 'Bearer ' + token);
               },
               success: function (data, status) {
                 $('select.suggestions-constraints').html(data).show().on('keyup', function(e) {
                                                     var x = event.which || event.keyCode;
                                                     if (x == 32) {
                                                             $("#inpS").val( $('select.suggestions-constraints option:selected').text() );
                                                             $('select.suggestions-constraints').hide();
                                                             $('button[type="search"]').click();
                                                             return false;
                                                      }
                                               });
                 $('select.suggestions-constraints option').on('mouseup', function(e) {
                    $("#inpS").val( $(this).text() );
                    $('select.suggestions-constraints').hide();
                    $('button[type="search"]').click();
                    return true;
                 });
               },
               error: function (xhr, status, error) {
                   alert( "Code : " + xhr.status + " error :"+ error);
                   console.log(error);
               }
              });
        }).attr('rel', true);

}) // $(document).ready

`)
//line forms.qtpl:222
	StreamSaveForm(qw422016)
//line forms.qtpl:222
	qw422016.N().S(`

// handling response AnyForm & render result according to structures of data
function afterSaveAnyForm(data, status) {

    if (data.content_url !== undefined) {
        loadContent(data.content_url);
    } else if (data.formActions !== undefined) {
        loadContent( data.formActions[0].url );
    } else if (data.error !== undefined) {
        alert(data.error);
    } else {
        console.log(data);
    }

    if (data.message !== undefined) {
        alert(data.message);
    }
}
// handling response login form, save users data & render some properties
 function afterLogin(userStruct, thisForm) {
	if (!userStruct) {
		alert("Need users data!")
		return false;
	}

	localStorage.setItem("USER",  JSON.stringify(userStruct) );
	token = userStruct.token;
	lang = userStruct.lang;

	$('#bLogin').text(userStruct.name + lang > "" ? "(" + lang +")" : "");
	$('.auth').removeClass("auth");

`)
//line forms.qtpl:255
	if changeTheme > "" {
//line forms.qtpl:255
		qw422016.N().S(changeTheme)
//line forms.qtpl:255
		qw422016.N().S(`(userStruct.theme);`)
//line forms.qtpl:255
	}
//line forms.qtpl:255
	qw422016.N().S(`
	if (urlAfterLogin === '') {
		if (userStruct.formActions !== undefined) {
		 urlAfterLogin = userStruct.formActions[0].url;
		} else {
		 urlAfterLogin =`)
//line forms.qtpl:261
	if afterAuthURL > "" {
//line forms.qtpl:261
		qw422016.N().S(`"`)
//line forms.qtpl:261
		qw422016.N().S(afterAuthURL)
//line forms.qtpl:261
		qw422016.N().S(`" `)
//line forms.qtpl:261
	} else {
//line forms.qtpl:261
		qw422016.N().S(` "/user/profile"`)
//line forms.qtpl:261
	}
//line forms.qtpl:261
	qw422016.N().S(`;
		}
	} else if (urlAfterLogin.onsubmit !== undefined ) {
		urlAfterLogin.onsubmit();
		urlAfterLogin = "";
		return;
	}

	loadContent(urlAfterLogin)
}
// run request & show content
function loadContent(url) {

     $.ajax({
            url: url,
            data: {
                    "lang": lang,
                    "html": true
            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader('Authorization', 'Bearer ' + token);
            },
            success: function (data, status) {
                PutContent(data, url);
            },
            error: function (xhr, status, error) {
                 switch (xhr.status) {
                 case 401:
                    urlAfterLogin = url;
                    $('#bLogin').trigger("click");
                    return;
                 case 0:
                    console.log(xhr);
                 }

                alert( "Code : " + xhr.status + " error :"+ error);
                console.log(`)
//line forms.qtpl:261
	qw422016.N().S("`")
//line forms.qtpl:261
	qw422016.N().S(`${url} ${status} ${error}`)
//line forms.qtpl:261
	qw422016.N().S("`")
//line forms.qtpl:261
	qw422016.N().S(`);
            }
       });
}

function PutContent(data, url) {
	$('#content').html(data);
	SetDocumentHash(url, data);
}


function LoadJScript(url, asyncS, cacheS, successFunc, completeFunc) {
    $.ajax({
        type: "GET",
        async: asyncS,
        cache: cacheS,
        url: url,
        global: false,
        dataType: "script",
        success: successFunc,
        complete: completeFunc,
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            if (errorThrown !== undefined)
                alert('Неудачная загрузка скрипта "' + url + '"! (' + textStatus + '). Перегрузите страницу!');
                console.log(errorThrown);
        }
    });
}
function showObject(data, thisForm) {
    if (!data) {
      alert('no results!')
      return false;
    }

    $('#content').html( '' );

    for (x in data) {
        $('#content').append('<div>');
        div = $('#content').children(':last').attr('id', data[x].id)
        div.append('<div>');
        titleDiv = div.children(':last')
        titleDiv.append('<h3> Group: <a href="/api/v1/search/?name=' + data[x].title + '" target="search">' + data[x].title + '</a></h3>');
        if (data[x].abbr > "") {
            titleDiv.append('<h4>' + data[x].abbr + '</h4>');
        }

        if (data[x].id_article > "") {
            titleDiv.append('<h4><a href="article/' + data[x].id_article + '" target="search">' + data[x].id_article + '</a></h4>');
        }

        for (y in data[x].company_names ) {
            titleDiv.append('<span>' + data[x].company_names[y] + '</span>');
        }
        
        for (y in data[x].list ) {
          div.append('<a href="' + data[x].list[y].document_url + '" rel="true" target="_blank">PDF</a>')
          brand = data[x].list[y].brand
          if (brand !== undefined) {
            div.append('<div>' + brand + '<a href="/api/v1/search/analog/' + brand + '" target="search"> Search analog</a></div>')
          }

           idPolymers = data[x].list[y].id_polymers
          if (data[x].list[y].has_additives !== false) {
            div.append('<div><a href="/api/v1/search/additives/?id=' + idPolymers + '" target="search"> Search additives</a></div>')
          }

          if (data[x].list[y].has_fillers !== false) {
            div.append('<div><a href="/api/v1/search/fillers/?id=' + idPolymers + '" target="search"> Search fillers</a></div>')
          }

          div.append('<div>' + data[x].list[y].company_name+ '</div>')
          div.append('<table>');
            div.append('<thr><thd> Values </thd><thd> Qty </thd> </thr>')

            for (z in data[x].list[y].characteristics) {
              div.append('<tr><td>'+z+'</td><td></td><td>'+data[x].list[y].characteristics[z]+'</td></tr>');
            }

           for (z in data[x].list[y].files) {
              div.append('<p><a href="'+data[x].list[y].files[z].url+'" rel="true" target="_blank">'+data[x].list[y].files[z].title+'</a></p>');
           }

           notes = data[x].list[y].description
           if (notes  > "") {
                div.append('<div>' + notes + '</div>')
           }
        }
    }
}
</script>
`)
//line forms.qtpl:387
}

//line forms.qtpl:387
func WriteHeadJSForForm(qq422016 qtio422016.Writer, afterAuthURL, changeTheme string) {
//line forms.qtpl:387
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.qtpl:387
	StreamHeadJSForForm(qw422016, afterAuthURL, changeTheme)
//line forms.qtpl:387
	qt422016.ReleaseWriter(qw422016)
//line forms.qtpl:387
}

//line forms.qtpl:387
func HeadJSForForm(afterAuthURL, changeTheme string) string {
//line forms.qtpl:387
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.qtpl:387
	WriteHeadJSForForm(qb422016, afterAuthURL, changeTheme)
//line forms.qtpl:387
	qs422016 := string(qb422016.B)
//line forms.qtpl:387
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.qtpl:387
	return qs422016
//line forms.qtpl:387
}
