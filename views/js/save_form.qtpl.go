/*
 * Copyright (c) 2022. Author: Ruslan Bikchentaev. All rights reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file.
 * Першій пріватний програміст.
 */

// Code generated by qtc from "save_form.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line save_form.qtpl:1
package js

//line save_form.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line save_form.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line save_form.qtpl:1
func StreamSaveForm(qw422016 *qt422016.Writer) {
//line save_form.qtpl:1
	qw422016.N().S(`
function saveForm(thisForm, successFunction, errorFunction) {
    if (!thisForm.noValidate && !confirm('Do you sure to send form?')) {
        return false
    }
    // TODO: create element form for output form result
    var $out = $('output', thisForm),
        $loading = $('.loading', thisForm),
        $progress = $('progress', thisForm);

    $(thisForm).ajaxSubmit({
        beforeSubmit: function(a,f,o) {
            o.dataType = "json";

             // rm field without values
             var isNewRecord = $('input[name=id]').length == 0;

             for( var i = a.length -1; i >= 0; --i){
                 if (a[i].readOnly
                  || ( (a[i].value === '') && (isNewRecord || a[i].type === 'select-one' || a[i].type === 'file' ))
                    || (a[i].value.length === 0) ) {
                     t = a.splice(i,1);
                     console.log(t);
                 }
             }

           $("input[type=checkbox][checked]:not(:checked)", f).each(function() {
               a.push({ name: this.name, value: 0, type: this.type, required: this.required });
           });
            a.push({ name: "is_get_form_actions", value: true, type: "boolean" });
            $out.html('Start sending...');
            $progress.show();
            $loading.show();
        },
       beforeSend: function (xhr) {
           xhr.setRequestHeader('Authorization', 'Bearer ' + token);
       },
       uploadProgress: function(event, position, total, percentComplete) {
            $out.html( 'Progress - ' + percentComplete + '%' );
            $progress.val( percentComplete );
        },
        success: function(data, status, xhr) {
            if (xhr.status === 206) {
                OverHijack($out, data);
                return
            }
            // TODO: добавить загрузку скрипта, если функция определена, но не подключена!
            if (successFunction !== undefined) {
                successFunction(data, thisForm);
            } else {
                $out.html('Успешно изменили запись.');
                afterSaveAnyForm(data, status);
            }
             $.fancybox.close();
        },
        error: function(xhr, status, error) {
            if (errorFunction !== undefined) {
                errorFunction(error, thisForm);
            } else {
                $out.html( xhr.responseText );
              switch (xhr.status) {
              case 206: {
                  fancyOpen( xhr.responseText );
                  return
              }
              case 400: {
                if (xhr.responseJSON.formErrors !== undefined) {
                    formErrors = xhr.responseJSON.formErrors
                    for (x in formErrors) {
                        formsInputs = thisForm.getElementsByTagName('input')
                        for (y in formsInputs) {
                         if (formsInputs[y].name == x) {
                            formsInputs[y].value = formErrors[x]
                            break;
                         }
                        }
                    }
                }
                return
              }
              default:
                      alert(xhr.responseText);
              }
           }
        },
        complete: function(xhr, status, obj) {
            $progress.hide();
            $loading.hide();
            console.log(status);
            console.log(obj);
       }
    });

    return false;
}
function OverHijack($out, resp) {
        $out.append('<pre>'+resp.message+'</pre>');
       $.ajax({
            url: resp.url,
            async: true,
            cache: false,
            contentType: false,
             data: {
                     "lang": lang,
                     "html": true
             },
          beforeSend: function (xhr) {
              xhr.setRequestHeader('Authorization', 'Bearer ' + token);
          },
          success: function (data, status, xhr) {
               switch (xhr.status) {
               case 206:
                    if (data.url !== undefined) {
                        resp.url = data.url
                    }
                    if (data.message != undefined) {
                        resp.message = data.message;
                    } else {
                        resp.message = data
                    }
                    OverHijack($out, resp);
                    return;
               case 202: {
                    $out.html(data);
                    return
               }
               default:
                     $out.html(data);
              }
          },
          error: function (xhr, status, error) {
             if (xhr.status == 401) {
                urlAfterLogin = url;
                $('#bLogin').trigger("click");
               return;
              }

              fancyOpen( "Code : " + xhr.status + ", "+ error + ": "+ xhr.responseText);
              console.log(xhr);
          }
         });
 }
`)
//line save_form.qtpl:143
}

//line save_form.qtpl:143
func WriteSaveForm(qq422016 qtio422016.Writer) {
//line save_form.qtpl:143
	qw422016 := qt422016.AcquireWriter(qq422016)
//line save_form.qtpl:143
	StreamSaveForm(qw422016)
//line save_form.qtpl:143
	qt422016.ReleaseWriter(qw422016)
//line save_form.qtpl:143
}

//line save_form.qtpl:143
func SaveForm() string {
//line save_form.qtpl:143
	qb422016 := qt422016.AcquireByteBuffer()
//line save_form.qtpl:143
	WriteSaveForm(qb422016)
//line save_form.qtpl:143
	qs422016 := string(qb422016.B)
//line save_form.qtpl:143
	qt422016.ReleaseByteBuffer(qb422016)
//line save_form.qtpl:143
	return qs422016
//line save_form.qtpl:143
}
