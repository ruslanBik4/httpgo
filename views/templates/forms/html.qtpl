{% import (
    "strconv"
	"strings"
)
%}
{% collapsespace %}
{% stripspace %}
{% func (f *FormField) FormHTML() %}
{% code
  idShake := strings.ReplaceAll(f.Title, " ", "_")
  defBlocks := make([]string, 0)
  var data map[string]any
  if h, ok := f.HideBlock.(map[string]any); ok {
    for _, p := range h["defaultBlocks"].([]any) {
        defBlocks = append(defBlocks, p.(string))
    }
    data = h["data"].(map[string]any)
  }
%}
<form id="{%s idShake %}_form" name="{%s f.Title %}" role='form' class="form-horizontal" target="content"
         action="{%s f.Action %}" method="{%s= f.Method %}" enctype="multipart/form-data"
         oninput="return FormIsModified(event, this);"
         onchange="return FormIsModified(event, this);"
      onsubmit="return saveForm(this, afterSaveAnyForm);" novalidate=true caption="{%s f.Title %}" >
	<h2> {%s= f.Title %}</h2>
     <figcaption>{%s= f.Description %}</figcaption>
     {% if len(defBlocks) > 0 %}
     <header id="navBlocks"> </header>
     {% endif %}
     {% for _, block := range f.Blocks %}
       {% code
            isHide := (len(defBlocks) > 0)
            for _, id := range defBlocks {
                  if id == strconv.Itoa(block.Id) {
                     isHide = false
                     break
                  }
            }
       %}
        <figure id = "block{%d block.Id %}" {% if isHide %} style="display:none"{% endif %} >
        {% if block.Title > "" %} <figcaption>{%s block.Title %}</figcaption>{% endif %}
        {% if block.Description > "" %} <p>{%s block.Description %} </p> {% endif %}
            {% for i, col := range block.Columns %}
		       {% code
		            if val :=  col.GetValues(); col.IsReadOnly && (len(val) == 0 || val[0] == nil) {
		                continue
		            }
		       %}
              <div id="divField{%d i %}" class="input-wrap" {% if col.IsHidden %} style="display:none" {% endif %} >
                <label class="input-label">
                {%= col.RenderInputs(data) %}
                <h6 class="errorLabel">{%s= col.patternDesc %}</h6>
                </label>
              </div>
            {% endfor %}
  {%- if block.Multiple -%}
         <button class="main-btn" type="button"
         onclick="this.parentNode.insertBefore(this.previousElementSibling.cloneNode(true), this); return false;">+</button>
  {%- endif -%}
  {%- if len(block.Buttons) > 0 -%}  <div class="form-actions">
      {%- for _, btn := range block.Buttons -%}
        <button class="{% if btn.Position %} hidden {% else %} button {% endif %}" type="{%s= btn.Type %}"
        {%- if btn.OnClick > "" -%}onClick="{%s btn.OnClick %}"{%- endif -%}>
        {%s btn.Title %}
        </button>
      {%- endfor -%}
    </div>
  {%- endif -%}
    </figure>
  {% endfor %}
  <output></output>
  <progress value='0' max='100' hidden > </progress>
</form>
{% endstripspace %}
{% endcollapsespace %}
{% endfunc %}
