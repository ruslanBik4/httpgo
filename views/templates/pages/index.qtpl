All the text outside function templates is treated as comments,
i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.
{% import (
	"github.com/valyala/quicktemplate"
	"github.com/ruslanBik4/httpgo/views/templates/layouts"
	"io"
)
%}
content of Index page
{%- code
    type IndexPageBody struct {
        Name         []byte
        Pass         []byte
        Content      string
        ContentWrite func(w io.Writer)
        Catalog      layouts.Menu
        TopMenu      layouts.Menu
        FooterMenu   layouts.Menu
        HeadHTML     *layouts.HeadHTMLPage
        OwnerMenu    *layouts.MenuOwnerBody
        Title string
        Route string
        Attr string
        AfterAuthURL string
        ChangeTheme string
        SearchPanel   *layouts.SearchPanel
    }

func (body *IndexPageBody) StreamContentWrite(w *quicktemplate.Writer) {
	body.ContentWrite(w.W())
}

-%}
{% func (body *IndexPageBody) IndexHTML() %}
{%= body.HeadHTML.HeadHTML() %}
<body {%s body.Attr %}>
{%= layouts.HeaderHTML(body.TopMenu) %}
<breadcrumbs separator="â€º" aria-label="breadcrumb" aria-label="breadcrumb">
  <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
  </ol>
{%- if body.SearchPanel != nil -%}{%= body.SearchPanel.Render() %}{%- endif -%}
</breadcrumbs>
<main class="content-wrap">
	<div id="container-fluid">
	        <aside class="sidebar-section">
	            <div id="catalog_pane"  class="well sidebar-nav">
	                <div class="sidebar"></div>
	                {%= body.Catalog.RenderMenu("left-mnu-list", "left-mnu-item") %}
	            </div>
	        </aside>
	        <div role="slider" aria-label="Draggable pane splitter" aria-valuemin="256" aria-valuemax="372" aria-valuenow="256" aria-valuetext="Pane width 256 pixels" tabindex="0">
	        </div>
	        <div class="content-section">
		        <div id="content" {% if body.Route > "" %}hx-get="{%s= body.Route %}" hx-trigger="load once" rel='htmx'{%- endif -%}>
	            {%- if body.ContentWrite != nil -%} {%= body.ContentWrite() %}
	            {%- else -%} {%s body.Content %}
	            {%- endif -%}</div>
	        </div>
	</div>
</main>
{%= layouts.FooterHTML(body.FooterMenu) %}
</body>
{% endfunc %}
