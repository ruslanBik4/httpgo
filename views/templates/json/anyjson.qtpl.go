// Code generated by qtc from "anyjson.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line anyjson.qtpl:1
package json

//line anyjson.qtpl:1
import (
	"github.com/ruslanBik4/gotools"
	"sort"
)

//line anyjson.qtpl:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line anyjson.qtpl:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line anyjson.qtpl:9
func StreamSliceJSON(qw422016 *qt422016.Writer, mapJSON []map[string]interface{}) {
//line anyjson.qtpl:9
	qw422016.N().S(`[`)
//line anyjson.qtpl:11
	for key, arrJSON := range mapJSON {
//line anyjson.qtpl:12
		if key > 0 {
//line anyjson.qtpl:12
			qw422016.N().S(`,`)
//line anyjson.qtpl:12
		}
//line anyjson.qtpl:12
		StreamAnyJSON(qw422016, arrJSON)
//line anyjson.qtpl:13
	}
//line anyjson.qtpl:13
	qw422016.N().S(`]`)
//line anyjson.qtpl:15
}

//line anyjson.qtpl:15
func WriteSliceJSON(qq422016 qtio422016.Writer, mapJSON []map[string]interface{}) {
//line anyjson.qtpl:15
	qw422016 := qt422016.AcquireWriter(qq422016)
//line anyjson.qtpl:15
	StreamSliceJSON(qw422016, mapJSON)
//line anyjson.qtpl:15
	qt422016.ReleaseWriter(qw422016)
//line anyjson.qtpl:15
}

//line anyjson.qtpl:15
func SliceJSON(mapJSON []map[string]interface{}) string {
//line anyjson.qtpl:15
	qb422016 := qt422016.AcquireByteBuffer()
//line anyjson.qtpl:15
	WriteSliceJSON(qb422016, mapJSON)
//line anyjson.qtpl:15
	qs422016 := string(qb422016.B)
//line anyjson.qtpl:15
	qt422016.ReleaseByteBuffer(qb422016)
//line anyjson.qtpl:15
	return qs422016
//line anyjson.qtpl:15
}

// получаем объект произвольной формы и возвращаем JSON текстом

//line anyjson.qtpl:18
func StreamAnyJSON(qw422016 *qt422016.Writer, arrJSON map[string]interface{}) {
//line anyjson.qtpl:18
	qw422016.N().S(`{`)
//line anyjson.qtpl:20
	sortList := make([]string, 0, len(arrJSON))
	for name := range arrJSON {
		sortList = append(sortList, name)
	}
	sort.Strings(sortList)

//line anyjson.qtpl:26
	for key, name := range sortList {
//line anyjson.qtpl:27
		if key > 0 {
//line anyjson.qtpl:27
			qw422016.N().S(`,`)
//line anyjson.qtpl:27
		}
//line anyjson.qtpl:27
		qw422016.N().S(`"`)
//line anyjson.qtpl:27
		qw422016.N().J(name)
//line anyjson.qtpl:27
		qw422016.N().S(`":`)
//line anyjson.qtpl:27
		StreamElement(qw422016, arrJSON[name])
//line anyjson.qtpl:28
	}
//line anyjson.qtpl:28
	qw422016.N().S(`}`)
//line anyjson.qtpl:30
}

//line anyjson.qtpl:30
func WriteAnyJSON(qq422016 qtio422016.Writer, arrJSON map[string]interface{}) {
//line anyjson.qtpl:30
	qw422016 := qt422016.AcquireWriter(qq422016)
//line anyjson.qtpl:30
	StreamAnyJSON(qw422016, arrJSON)
//line anyjson.qtpl:30
	qt422016.ReleaseWriter(qw422016)
//line anyjson.qtpl:30
}

//line anyjson.qtpl:30
func AnyJSON(arrJSON map[string]interface{}) string {
//line anyjson.qtpl:30
	qb422016 := qt422016.AcquireByteBuffer()
//line anyjson.qtpl:30
	WriteAnyJSON(qb422016, arrJSON)
//line anyjson.qtpl:30
	qs422016 := string(qb422016.B)
//line anyjson.qtpl:30
	qt422016.ReleaseByteBuffer(qb422016)
//line anyjson.qtpl:30
	return qs422016
//line anyjson.qtpl:30
}

//line anyjson.qtpl:31
func StreamStringJSON(qw422016 *qt422016.Writer, arrJSON map[string]string) {
//line anyjson.qtpl:31
	qw422016.N().S(`{`)
//line anyjson.qtpl:33
	sortList := make([]string, 0, len(arrJSON))
	for name := range arrJSON {
		sortList = append(sortList, name)
	}
	sort.Strings(sortList)

//line anyjson.qtpl:39
	for key, name := range sortList {
//line anyjson.qtpl:40
		if key > 0 {
//line anyjson.qtpl:40
			qw422016.N().S(`,`)
//line anyjson.qtpl:40
		}
//line anyjson.qtpl:40
		qw422016.N().S(`"`)
//line anyjson.qtpl:40
		qw422016.N().J(name)
//line anyjson.qtpl:40
		qw422016.N().S(`":`)
//line anyjson.qtpl:40
		StreamElement(qw422016, arrJSON[name])
//line anyjson.qtpl:41
	}
//line anyjson.qtpl:41
	qw422016.N().S(`}`)
//line anyjson.qtpl:43
}

//line anyjson.qtpl:43
func WriteStringJSON(qq422016 qtio422016.Writer, arrJSON map[string]string) {
//line anyjson.qtpl:43
	qw422016 := qt422016.AcquireWriter(qq422016)
//line anyjson.qtpl:43
	StreamStringJSON(qw422016, arrJSON)
//line anyjson.qtpl:43
	qt422016.ReleaseWriter(qw422016)
//line anyjson.qtpl:43
}

//line anyjson.qtpl:43
func StringJSON(arrJSON map[string]string) string {
//line anyjson.qtpl:43
	qb422016 := qt422016.AcquireByteBuffer()
//line anyjson.qtpl:43
	WriteStringJSON(qb422016, arrJSON)
//line anyjson.qtpl:43
	qs422016 := string(qb422016.B)
//line anyjson.qtpl:43
	qt422016.ReleaseByteBuffer(qb422016)
//line anyjson.qtpl:43
	return qs422016
//line anyjson.qtpl:43
}

// write string with escaping

//line anyjson.qtpl:46
func StreamString(qw422016 *qt422016.Writer, str string) {
//line anyjson.qtpl:46
	qw422016.N().S(`"`)
//line anyjson.qtpl:47
	qw422016.N().J(str)
//line anyjson.qtpl:47
	qw422016.N().S(`"`)
//line anyjson.qtpl:48
}

//line anyjson.qtpl:48
func WriteString(qq422016 qtio422016.Writer, str string) {
//line anyjson.qtpl:48
	qw422016 := qt422016.AcquireWriter(qq422016)
//line anyjson.qtpl:48
	StreamString(qw422016, str)
//line anyjson.qtpl:48
	qt422016.ReleaseWriter(qw422016)
//line anyjson.qtpl:48
}

//line anyjson.qtpl:48
func String(str string) string {
//line anyjson.qtpl:48
	qb422016 := qt422016.AcquireByteBuffer()
//line anyjson.qtpl:48
	WriteString(qb422016, str)
//line anyjson.qtpl:48
	qs422016 := string(qb422016.B)
//line anyjson.qtpl:48
	qt422016.ReleaseByteBuffer(qb422016)
//line anyjson.qtpl:48
	return qs422016
//line anyjson.qtpl:48
}

// write string with escaping

//line anyjson.qtpl:51
func StreamByteAsString(qw422016 *qt422016.Writer, b []byte) {
//line anyjson.qtpl:52
	StreamString(qw422016, gotools.BytesToString(b))
//line anyjson.qtpl:53
}

//line anyjson.qtpl:53
func WriteByteAsString(qq422016 qtio422016.Writer, b []byte) {
//line anyjson.qtpl:53
	qw422016 := qt422016.AcquireWriter(qq422016)
//line anyjson.qtpl:53
	StreamByteAsString(qw422016, b)
//line anyjson.qtpl:53
	qt422016.ReleaseWriter(qw422016)
//line anyjson.qtpl:53
}

//line anyjson.qtpl:53
func ByteAsString(b []byte) string {
//line anyjson.qtpl:53
	qb422016 := qt422016.AcquireByteBuffer()
//line anyjson.qtpl:53
	WriteByteAsString(qb422016, b)
//line anyjson.qtpl:53
	qs422016 := string(qb422016.B)
//line anyjson.qtpl:53
	qt422016.ReleaseByteBuffer(qb422016)
//line anyjson.qtpl:53
	return qs422016
//line anyjson.qtpl:53
}

// пишем элемент массива в зависемости от типа

//line anyjson.qtpl:56
func StreamElement(qw422016 *qt422016.Writer, value any) {
//line anyjson.qtpl:57
	switch vv := value.(type) {
//line anyjson.qtpl:58
	case string:
//line anyjson.qtpl:58
		StreamString(qw422016, vv)
//line anyjson.qtpl:59
	case []byte:
//line anyjson.qtpl:59
		StreamByteAsString(qw422016, vv)
//line anyjson.qtpl:60
	case bool:
//line anyjson.qtpl:60
		qw422016.E().V(vv)
//line anyjson.qtpl:61
	case int:
//line anyjson.qtpl:61
		qw422016.N().D(vv)
//line anyjson.qtpl:62
	case uint:
//line anyjson.qtpl:62
		qw422016.N().D(int(vv))
//line anyjson.qtpl:63
	case int32:
//line anyjson.qtpl:63
		qw422016.N().D(int(vv))
//line anyjson.qtpl:64
	case int64:
//line anyjson.qtpl:64
		qw422016.N().DL(vv)
//line anyjson.qtpl:65
	case float32:
//line anyjson.qtpl:65
		qw422016.N().F(float64(vv))
//line anyjson.qtpl:66
	case float64:
//line anyjson.qtpl:66
		qw422016.N().F(vv)
//line anyjson.qtpl:67
	case nil:
//line anyjson.qtpl:67
		qw422016.N().S(`null`)
//line anyjson.qtpl:68
	case []int32:
//line anyjson.qtpl:69
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:70
	case []int64:
//line anyjson.qtpl:71
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:72
	case []float32:
//line anyjson.qtpl:73
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:74
	case []float64:
//line anyjson.qtpl:75
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:76
	case []string:
//line anyjson.qtpl:77
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:78
	case []any:
//line anyjson.qtpl:79
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:80
	case map[string]string:
//line anyjson.qtpl:81
		StreamMap(qw422016, vv)
//line anyjson.qtpl:82
	case map[string]int:
//line anyjson.qtpl:83
		StreamMap(qw422016, vv)
//line anyjson.qtpl:84
	case map[string]bool:
//line anyjson.qtpl:85
		StreamMap(qw422016, vv)
//line anyjson.qtpl:86
	case map[string]any:
//line anyjson.qtpl:87
		StreamMap(qw422016, vv)
//line anyjson.qtpl:88
	case map[int]string:
//line anyjson.qtpl:89
		StreamMap(qw422016, vv)
//line anyjson.qtpl:90
	case map[int]int:
//line anyjson.qtpl:91
		StreamMap(qw422016, vv)
//line anyjson.qtpl:92
	case map[int]any:
//line anyjson.qtpl:93
		StreamMap(qw422016, vv)
//line anyjson.qtpl:94
	case map[bool]string:
//line anyjson.qtpl:95
		StreamMap(qw422016, vv)
//line anyjson.qtpl:96
	case map[bool]int:
//line anyjson.qtpl:97
		StreamMap(qw422016, vv)
//line anyjson.qtpl:98
	case map[bool]any:
//line anyjson.qtpl:99
		StreamMap(qw422016, vv)
//line anyjson.qtpl:100
	case []map[string]any:
//line anyjson.qtpl:101
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:102
	case []map[int]any:
//line anyjson.qtpl:103
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:104
	case []map[bool]any:
//line anyjson.qtpl:105
		StreamSlice(qw422016, vv)
//line anyjson.qtpl:106
	default:
//line anyjson.qtpl:107
		StreamWrap(qw422016, value)
//line anyjson.qtpl:108
	}
//line anyjson.qtpl:109
}

//line anyjson.qtpl:109
func WriteElement(qq422016 qtio422016.Writer, value any) {
//line anyjson.qtpl:109
	qw422016 := qt422016.AcquireWriter(qq422016)
//line anyjson.qtpl:109
	StreamElement(qw422016, value)
//line anyjson.qtpl:109
	qt422016.ReleaseWriter(qw422016)
//line anyjson.qtpl:109
}

//line anyjson.qtpl:109
func Element(value any) string {
//line anyjson.qtpl:109
	qb422016 := qt422016.AcquireByteBuffer()
//line anyjson.qtpl:109
	WriteElement(qb422016, value)
//line anyjson.qtpl:109
	qs422016 := string(qb422016.B)
//line anyjson.qtpl:109
	qt422016.ReleaseByteBuffer(qb422016)
//line anyjson.qtpl:109
	return qs422016
//line anyjson.qtpl:109
}
