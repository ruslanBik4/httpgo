/*
 * Copyright (c) 2022. Author: Ruslan Bikchentaev. All rights reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file.
 * Перший приватний програміст.
 */

// Code generated by qtc from "styles.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// All the text outside function templates is treated as comments,
// i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.
//
// standart styles .

//line styles.qtpl:5
package layouts

//line styles.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line styles.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line styles.qtpl:5
func StreamPutStyles(qw422016 *qt422016.Writer) {
//line styles.qtpl:5
	qw422016.N().S(`
<style>
body {
    color: rgb(10, 28, 59);
}

#catalog_pane {
    height: 99%;
    vertical-align: top;
    padding-left: 1px;
    padding-right: 5px;
    padding-top: 3px;
}
.content-wrap {
    width: 100%;
}
.content-sep {
    width: 5%;
}
.sidebar-section {
    width: 15%;
    display: table-cell;
//        padding-left: 15px;
        padding-top: 3px;
}
.row-fluid {
    width: 100%;
    display: flex;
}
.content-section {
    width: 80%;
    display: table-cell;
}
header {
    position: sticky;
}
.top-mnu-list {
    margin-top: 5px;
}
.left-mnu-list {
    margin-left: 5px;
    display:grid;
    background-color: transparent;
}
li.left-mnu-item a {
    color: black;
}
ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: #333333;
}

li {
 display: block;
 transition-duration: 0.5s;
 float: left;
}

li a {
  color: white;
  text-align: center;
  padding: 5px;
  text-decoration: none;
}

li a:hover {
  background-color: #111111;
}

li:hover {
  cursor: pointer;
}

ul li ul.dropdown {
  visibility: hidden;
  opacity: 0;
  position: absolute;
  transition: all 0.5s ease;
  margin-top: 1rem;
  display: none;
}

ul li:hover > ul.dropdown,
ul li:focus-within > ul.dropdown,
ul li ul.dropdown:hover {
  visibility: visible;
  opacity: 1;
  margin: 0;
  display: block;
}

ul li ul.dropdown li {
  clear: both;
  width: 100%;
}
// forms
input[type=text] {
    padding: 8px;
    border: 1px solid #c2c7d1;
    border-radius: 3px;
    transition: all .3s ease;
    margin-top: 5px;
    width: 80%;
    color: #0a1c3b;
}
input[type=file] {
    display: inline;
}
label textarea {
    width: 90%;
    float: inline-end;
}
label input {
    align-content: right;
    text-align: center;
    float: inline-end;
    width: 40%;
	min-width: 200px;
}
label select {
    align-content: right;
    text-align: center;
    float: inline-end;
    width: 40%;
	min-width: 200px;
}
</style>
`)
//line styles.qtpl:126
}

//line styles.qtpl:126
func WritePutStyles(qq422016 qtio422016.Writer) {
//line styles.qtpl:126
	qw422016 := qt422016.AcquireWriter(qq422016)
//line styles.qtpl:126
	StreamPutStyles(qw422016)
//line styles.qtpl:126
	qt422016.ReleaseWriter(qw422016)
//line styles.qtpl:126
}

//line styles.qtpl:126
func PutStyles() string {
//line styles.qtpl:126
	qb422016 := qt422016.AcquireByteBuffer()
//line styles.qtpl:126
	WritePutStyles(qb422016)
//line styles.qtpl:126
	qs422016 := string(qb422016.B)
//line styles.qtpl:126
	qt422016.ReleaseByteBuffer(qb422016)
//line styles.qtpl:126
	return qs422016
//line styles.qtpl:126
}
