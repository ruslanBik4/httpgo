/*
 * Copyright (c) 2023. Author: Ruslan Bikchentaev. All rights reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file.
 * Перший приватний програміст.
 */

// Code generated by qtc from "raw_http_response.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line raw_http_response.qtpl:1
package layouts

//line raw_http_response.qtpl:2
import "github.com/valyala/fasthttp"

//line raw_http_response.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line raw_http_response.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line raw_http_response.qtpl:4
func StreamHTTPResponse(qw422016 *qt422016.Writer, msg []byte, statusCode int, headers ...string) {
//line raw_http_response.qtpl:4
	qw422016.N().S(`HTTP/1.1 `)
//line raw_http_response.qtpl:5
	qw422016.N().D(statusCode)
//line raw_http_response.qtpl:5
	qw422016.N().S(` `)
//line raw_http_response.qtpl:5
	qw422016.E().S(fasthttp.StatusMessage(statusCode))
//line raw_http_response.qtpl:5
	qw422016.N().S(`
Content-Type: text/plain; charset=utf-8
Content-Length: `)
//line raw_http_response.qtpl:7
	qw422016.N().D(len(msg))
//line raw_http_response.qtpl:7
	qw422016.N().S(`
`)
//line raw_http_response.qtpl:8
	for _, h := range headers {
//line raw_http_response.qtpl:9
		qw422016.N().S(h)
//line raw_http_response.qtpl:9
		qw422016.N().S(`
`)
//line raw_http_response.qtpl:10
	}
//line raw_http_response.qtpl:11
	qw422016.N().Z(msg)
//line raw_http_response.qtpl:11
	qw422016.N().S(`
`)
//line raw_http_response.qtpl:12
}

//line raw_http_response.qtpl:12
func WriteHTTPResponse(qq422016 qtio422016.Writer, msg []byte, statusCode int, headers ...string) {
//line raw_http_response.qtpl:12
	qw422016 := qt422016.AcquireWriter(qq422016)
//line raw_http_response.qtpl:12
	StreamHTTPResponse(qw422016, msg, statusCode, headers...)
//line raw_http_response.qtpl:12
	qt422016.ReleaseWriter(qw422016)
//line raw_http_response.qtpl:12
}

//line raw_http_response.qtpl:12
func HTTPResponse(msg []byte, statusCode int, headers ...string) string {
//line raw_http_response.qtpl:12
	qb422016 := qt422016.AcquireByteBuffer()
//line raw_http_response.qtpl:12
	WriteHTTPResponse(qb422016, msg, statusCode, headers...)
//line raw_http_response.qtpl:12
	qs422016 := string(qb422016.B)
//line raw_http_response.qtpl:12
	qt422016.ReleaseByteBuffer(qb422016)
//line raw_http_response.qtpl:12
	return qs422016
//line raw_http_response.qtpl:12
}
