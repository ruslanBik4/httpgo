// Code generated by qtc from "jquery.fancybox-buttons.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// Buttons helper for fancyBox
// i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.
//
// .

//line views/templates/js/jquery.fancybox-buttons.qtpl:5
package js

//line views/templates/js/jquery.fancybox-buttons.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/templates/js/jquery.fancybox-buttons.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/templates/js/jquery.fancybox-buttons.qtpl:5
func StreamJqueryFancyboxButtons(qw422016 *qt422016.Writer) {
//line views/templates/js/jquery.fancybox-buttons.qtpl:5
	qw422016.N().S(`
    <script>
  /*!
  * Buttons helper for fancyBox
  * version: 1.0.5 (Mon, 15 Oct 2012)
  * @requires fancyBox v2.0 or later
  *
  * Usage:
  *     $(".fancybox").fancybox({
  *         helpers : {
  *             buttons: {
  *                 position : 'top'
  *             }
  *         }
  *     });
  *
  */
 ;(function ($) {
 	//Shortcut for fancyBox object
 	var F = $.fancybox;

 	//Add helper object
 	F.helpers.buttons = {
 		defaults : {
 			skipSingle : false, // disables if gallery contains single image
 			position   : 'top', // 'top' or 'bottom'
 			tpl        : '<div id="fancybox-buttons"><ul><li><a class="btnPrev" title="Previous" href="javascript:;"></a></li><li><a class="btnPlay" title="Start slideshow" href="javascript:;"></a></li><li><a class="btnNext" title="Next" href="javascript:;"></a></li><li><a class="btnToggle" title="Toggle size" href="javascript:;"></a></li><li><a class="btnClose" title="Close" href="javascript:;"></a></li></ul></div>'
 		},

 		list : null,
 		buttons: null,

 		beforeLoad: function (opts, obj) {
 			//Remove self if gallery do not have at least two items

 			if (opts.skipSingle && obj.group.length < 2) {
 				obj.helpers.buttons = false;
 				obj.closeBtn = true;

 				return;
 			}

 			//Increase top margin to give space for buttons
 			obj.margin[ opts.position === 'bottom' ? 2 : 0 ] += 30;
 		},

 		onPlayStart: function () {
 			if (this.buttons) {
 				this.buttons.play.attr('title', 'Pause slideshow').addClass('btnPlayOn');
 			}
 		},

 		onPlayEnd: function () {
 			if (this.buttons) {
 				this.buttons.play.attr('title', 'Start slideshow').removeClass('btnPlayOn');
 			}
 		},

 		afterShow: function (opts, obj) {
 			var buttons = this.buttons;

 			if (!buttons) {
 				this.list = $(opts.tpl).addClass(opts.position).appendTo('body');

 				buttons = {
 					prev   : this.list.find('.btnPrev').click( F.prev ),
 					next   : this.list.find('.btnNext').click( F.next ),
 					play   : this.list.find('.btnPlay').click( F.play ),
 					toggle : this.list.find('.btnToggle').click( F.toggle ),
 					close  : this.list.find('.btnClose').click( F.close )
 				}
 			}

 			//Prev
 			if (obj.index > 0 || obj.loop) {
 				buttons.prev.removeClass('btnDisabled');
 			} else {
 				buttons.prev.addClass('btnDisabled');
 			}

 			//Next / Play
 			if (obj.loop || obj.index < obj.group.length - 1) {
 				buttons.next.removeClass('btnDisabled');
 				buttons.play.removeClass('btnDisabled');

 			} else {
 				buttons.next.addClass('btnDisabled');
 				buttons.play.addClass('btnDisabled');
 			}

 			this.buttons = buttons;

 			this.onUpdate(opts, obj);
 		},

 		onUpdate: function (opts, obj) {
 			var toggle;

 			if (!this.buttons) {
 				return;
 			}

 			toggle = this.buttons.toggle.removeClass('btnDisabled btnToggleOn');

 			//Size toggle button
 			if (obj.canShrink) {
 				toggle.addClass('btnToggleOn');

 			} else if (!obj.canExpand) {
 				toggle.addClass('btnDisabled');
 			}
 		},

 		beforeClose: function () {
 			if (this.list) {
 				this.list.remove();
 			}

 			this.list    = null;
 			this.buttons = null;
 		}
 	};

 }(jQuery));

    </script>
`)
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
}

//line views/templates/js/jquery.fancybox-buttons.qtpl:131
func WriteJqueryFancyboxButtons(qq422016 qtio422016.Writer) {
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	StreamJqueryFancyboxButtons(qw422016)
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	qt422016.ReleaseWriter(qw422016)
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
}

//line views/templates/js/jquery.fancybox-buttons.qtpl:131
func JqueryFancyboxButtons() string {
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	qb422016 := qt422016.AcquireByteBuffer()
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	WriteJqueryFancyboxButtons(qb422016)
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	qs422016 := string(qb422016.B)
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	qt422016.ReleaseByteBuffer(qb422016)
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
	return qs422016
//line views/templates/js/jquery.fancybox-buttons.qtpl:131
}
