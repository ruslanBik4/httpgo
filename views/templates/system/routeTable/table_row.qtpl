{% import (
	"time"

	"github.com/ruslanBik4/httpgo/views/templates/json"
	"github.com/ruslanBik4/dbEngine/dbEngine"
	)
%}
{% collapsespace %}
{% stripspace %}

{% func TableRow(columns []dbEngine.Column, rows [][] interface{}) %}
<style>
{%= TableCSS() %}
{%code
   colLen := make([]int, len(columns))
   allWidth := 0
   for i, col := range columns {
        colLen[i] = len(col.Name())
   }
%}
</style>
<div class="usr-table  table-custom">
    <div class="usr-table-header">
        <div class="usr-table__t-head  usr-table-row">
        {% for i, col := range columns %}
            <div class="usr-table-col  table-col-{%d i%}" a={%d i %}>
                {%s col.Name() %}
            </div>
        {% endfor %}
        </div>

        <div class="usr-table__filter  usr-table-row">
         {% for i, col := range columns %}
           <div class="usr-table-col table-col-{%d i%}">
                <div class="filt-arrow" style="word-break: break-word;">

                    <a class="filt-arrow__link arrow-bottom" href="#{%s col.Name() %}" title="{%s col.Type() %}">
                        {%s col.Comment() %}
                    </a>
                </div>
            </div>
          {% endfor %}
         </div>
    </div>

    <div class="usr-table-content">
        <div class="usr-table-content-scroll">
            <div class="usr-table-row-cont">

               {% for _, row  := range rows %}

                    <div  class="usr-table-row">

                    {% for i, column := range columns %}
                        <div class="usr-table-col  table-col-{%d i%}">
                            {% switch val := row[i].(type) %}
                            {% case time.Time %}  {%s val.Format("2006-01-02") %}
                            {% case string %}
                              {%s= val %}
                              {%code
                                if len(val) > colLen[i] && (column.Name() != "id") {
                                  colLen[i] = len(val)
                                }
                              %}
                            {% case float32 %}   {%v= val %}
                            {% case float64 %}   {%f.2 val %}
                            {% default %}
                              {% if r, ok := val.([]string); ok %}
                                {
                                 {% for _, str := range r %}
                                  <p>{%s= str %} </p>
                               {%code
                                 if len(r) > colLen[i] {
                                   colLen[i] = len(r)
                                 }
                               %}
                               {% endfor %}
                               }
                             {% elseif r, ok := val.([]interface{}); ok %}
                                 {% for _, value := range r %}
                                  <p>{
                                    {% if m, ok := value.(map[string]interface{}); ok %}
                                      {% for key, value := range m %}
                                        <b>{%s key %}</b>: {%= json.Element(value)%},
                                      {% endfor %}
                                    {% else %}
                                          {%= json.Element(value) %}
                                    {% endif %}
                                  } </p>
                                {% endfor %}
                              {% else %}
                                    {%= json.Element(row[i]) %}
                              {% endif %}
                            {% endswitch %}
                        </div>
                    {% endfor %}

                  </div>

                {% endfor %}

            </div>
        </div>
    </div>
</div>
<style>
{% for i, cLen := range colLen %}
  {% code
    if cLen > 50 {
        cLen = 50
    }
    lSymb := 7
    allWidth += cLen * lSymb

  %}
.table-col-{%d i%}{
    width: {%d cLen * lSymb %}px;
    {% if columns[i].Type() == "timestamp" %}
    word-break: break-all;
    {% endif %}
}
.usr-table-row{
 .table-col-{%d i%}{
   text-align: {% if columns[i].CharacterMaximumLength() > 0 %} left
                {% else %} right
              {% endif %};
  }
}
{% endfor %}
.table-custom{
    width: {%d allWidth %}px;
}
</style>
{% endfunc %}
{% endcollapsespace %}
{% endstripspace %}