// Code generated by qtc from "table_row.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line table_row.qtpl:1
package routeTable

//line table_row.qtpl:1
import (
	"fmt"
	"go/types"
	"regexp"
	"sort"
	"time"

	"github.com/ruslanBik4/dbEngine/dbEngine"
	"github.com/ruslanBik4/httpgo/views/templates/forms"
	"github.com/ruslanBik4/httpgo/views/templates/json"
)

//line table_row.qtpl:13
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line table_row.qtpl:13
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line table_row.qtpl:14
var regHTML = regexp.MustCompile(`>([^<]+)<\/`)

type TableRender struct {
	dbEngine.Table
	columns   []*forms.ColumnDecor
	rows      [][]any
	ApiImport string
	ApiExport string
	ApiURL    string
	OnlyView  bool
}

func NewTableRender(table dbEngine.Table, columns []*forms.ColumnDecor, rows [][]any, ApiURL string, onlyView bool) *TableRender {
	return &TableRender{Table: table, columns: columns, rows: rows, ApiURL: ApiURL, ApiImport: ApiURL + "import", ApiExport: ApiURL + "export", OnlyView: onlyView}
}

//line table_row.qtpl:29
func StreamTableRow(qw422016 *qt422016.Writer, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:29
	qw422016.N().S(`
`)
//line table_row.qtpl:31
	t := &TableRender{columns: columns, rows: rows}

//line table_row.qtpl:32
	qw422016.N().S(`
<link rel="stylesheet" href="/css/tables.css" media="screen">
<script src="/js/tables.js" async></script>
	`)
//line table_row.qtpl:35
	t.StreamAllTable(qw422016)
//line table_row.qtpl:35
	qw422016.N().S(`
`)
//line table_row.qtpl:36
}

//line table_row.qtpl:36
func WriteTableRow(qq422016 qtio422016.Writer, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:36
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:36
	StreamTableRow(qw422016, columns, rows)
//line table_row.qtpl:36
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:36
}

//line table_row.qtpl:36
func TableRow(columns []*forms.ColumnDecor, rows [][]any) string {
//line table_row.qtpl:36
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:36
	WriteTableRow(qb422016, columns, rows)
//line table_row.qtpl:36
	qs422016 := string(qb422016.B)
//line table_row.qtpl:36
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:36
	return qs422016
//line table_row.qtpl:36
}

//line table_row.qtpl:38
func (t *TableRender) StreamAllTable(qw422016 *qt422016.Writer) {
//line table_row.qtpl:38
	qw422016.N().S(`
`)
//line table_row.qtpl:39
	qw422016.N().S(` `)
//line table_row.qtpl:40
	qw422016.N().S(`<title>`)
//line table_row.qtpl:41
	qw422016.E().S(t.Name())
//line table_row.qtpl:41
	qw422016.N().S(`:`)
//line table_row.qtpl:41
	qw422016.E().S(t.Comment())
//line table_row.qtpl:41
	qw422016.N().S(`</title><div class="sidebar" id="t_`)
//line table_row.qtpl:42
	qw422016.E().S(t.Name())
//line table_row.qtpl:42
	qw422016.N().S(`_sidebar" hx-swap-oob="outerHTML:.sidebar"><form action="`)
//line table_row.qtpl:43
	qw422016.E().S(t.ApiImport)
//line table_row.qtpl:43
	qw422016.N().S(`" hx-encoding="multipart/form-data" hx-post="`)
//line table_row.qtpl:43
	qw422016.E().S(t.ApiImport)
//line table_row.qtpl:43
	qw422016.N().S(`"_="on htmx:xhr:progress(loaded, total) set #progress.value to (loaded/total)*100"><!-- method="POST" enctype="multipart/form-data" onsubmit="return saveForm(this);" --><h3>`)
//line table_row.qtpl:46
	qw422016.E().S(t.Name())
//line table_row.qtpl:46
	qw422016.N().S(`</h3><div class="only_auth">`)
//line table_row.qtpl:48
	if !t.OnlyView {
//line table_row.qtpl:48
		qw422016.N().S(`<span class="hiddenInput" style="height:30px;width:50%" title="Choice csv-file for import to table '`)
//line table_row.qtpl:49
		qw422016.E().S(t.Name())
//line table_row.qtpl:49
		qw422016.N().S(`:`)
//line table_row.qtpl:49
		qw422016.E().S(t.Comment())
//line table_row.qtpl:49
		qw422016.N().S(`'"><input type="file" required multiple id="csv" name="csv" accept=".csv" onchange="uploadGzippedFile(this, '`)
//line table_row.qtpl:50
		qw422016.E().S(t.ApiImport)
//line table_row.qtpl:50
		qw422016.N().S(`');"/></span>`)
//line table_row.qtpl:52
	} else {
//line table_row.qtpl:54
	}
//line table_row.qtpl:54
	qw422016.N().S(`<a href="`)
//line table_row.qtpl:56
	qw422016.E().S(t.ApiExport)
//line table_row.qtpl:56
	qw422016.N().S(`" download='.csv' title="Save data from '`)
//line table_row.qtpl:56
	qw422016.E().S(t.Name())
//line table_row.qtpl:56
	qw422016.N().S(`:`)
//line table_row.qtpl:56
	qw422016.E().S(t.Comment())
//line table_row.qtpl:56
	qw422016.N().S(`' to disk (csv)"><svg xmlns="http://www.w3.org/2000/svg" width="50%" height="80px" fill="currentColor" class="bi bi-file-arrow-down" viewBox="0 0 30 30"><path d="M8 5a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5A.5.5 0 0 1 8 5"/><path d="M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm0 1h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1"/></svg></a></div><progress value='0' max='100' hidden > </progress><output></output><figure hx-swap-oob='innerHTML:[data-name="Check column"]'><figurecaption> Show columns </figurecaption><div class="input-wrap"><label class="input-label"> Toggle all<input type="checkbox" checked name="all_columns" hx-on:click="HideAllColumn();"/><h6 class="errorLabel">Column is hidden</h6></label></div>`)
//line table_row.qtpl:74
	for i, col := range t.columns[1:] {
//line table_row.qtpl:74
		qw422016.N().S(`<div class="input-wrap"><label class="input-label">`)
//line table_row.qtpl:76
		qw422016.E().S(col.Label)
//line table_row.qtpl:76
		qw422016.N().S(`<input type="checkbox" checked data-name="`)
//line table_row.qtpl:77
		qw422016.E().S(col.InputName(i))
//line table_row.qtpl:77
		qw422016.N().S(`" data-role="chk_column" name="`)
//line table_row.qtpl:77
		qw422016.E().S(col.Name())
//line table_row.qtpl:77
		qw422016.N().S(`" hx-on:change="HideColumn(`)
//line table_row.qtpl:77
		qw422016.N().D(i + 1)
//line table_row.qtpl:77
		qw422016.N().S(`, this.checked)"/><h6 class="errorLabel">Column is hidden</h6></label></div>`)
//line table_row.qtpl:81
	}
//line table_row.qtpl:81
	qw422016.N().S(`</figure></form></div><div class="usr-table table-custom" id="t_`)
//line table_row.qtpl:85
	qw422016.E().S(t.Name())
//line table_row.qtpl:85
	qw422016.N().S(`" ><div class="usr-table-header"><div class="usr-table__t-head  usr-table-row">`)
//line table_row.qtpl:88
	for i, col := range t.columns {
//line table_row.qtpl:88
		qw422016.N().S(`<div class="usr-table-col table-col-`)
//line table_row.qtpl:89
		qw422016.N().D(i)
//line table_row.qtpl:90
		if col.Label == "id" && i < len(t.columns)-1 {
//line table_row.qtpl:90
			qw422016.N().S(`" ><ul class="left-mnu-list" style="z-index:4;"><li><a>#</a><ul class="dropdown">go to column...`)
//line table_row.qtpl:93
			for j, c := range t.columns[i+1:] {
//line table_row.qtpl:93
				qw422016.N().S(`<li class="left-mnu-item"><a href='#' onclick="return ScrollToElem('.table-col-`)
//line table_row.qtpl:95
				qw422016.N().D(i + j + 1)
//line table_row.qtpl:95
				qw422016.N().S(`');" title='`)
//line table_row.qtpl:95
				qw422016.E().S(c.Label)
//line table_row.qtpl:95
				qw422016.N().S(`'>`)
//line table_row.qtpl:96
				qw422016.E().S(fmt.Sprintf("%.20s", c.Label))
//line table_row.qtpl:96
				qw422016.N().S(`</a></li>`)
//line table_row.qtpl:98
			}
//line table_row.qtpl:98
			qw422016.N().S(`</ul></li></ul>`)
//line table_row.qtpl:100
		} else {
//line table_row.qtpl:100
			qw422016.N().S(` `)
//line table_row.qtpl:100
			qw422016.N().S(`sortable" ><span column="`)
//line table_row.qtpl:100
			qw422016.E().S(col.Name())
//line table_row.qtpl:100
			qw422016.N().S(`" hx-target=".usr-table-row-cont" hx-select=".usr-table-row-cont" hx-get='`)
//line table_row.qtpl:100
			qw422016.E().S(t.ApiURL)
//line table_row.qtpl:100
			qw422016.N().S(`browse' hx-vals='js:{...reqParams(0)}'onClick='ClickPseudo(this);'>`)
//line table_row.qtpl:101
			qw422016.E().S(col.Label)
//line table_row.qtpl:101
			qw422016.N().S(`</span>`)
//line table_row.qtpl:102
		}
//line table_row.qtpl:102
		qw422016.N().S(`</div>`)
//line table_row.qtpl:104
	}
//line table_row.qtpl:104
	qw422016.N().S(`</div><div class="usr-table__filter usr-table-row">`)
//line table_row.qtpl:108
	for i, col := range t.columns {
//line table_row.qtpl:108
		qw422016.N().S(`<div class="usr-table-col table-col-`)
//line table_row.qtpl:109
		qw422016.N().D(i)
//line table_row.qtpl:109
		qw422016.N().S(`"><div class="filt-arrow">`)
//line table_row.qtpl:111
		if col.LinkNew > "" {
//line table_row.qtpl:111
			qw422016.N().S(col.LinkNew)
//line table_row.qtpl:112
		} else {
//line table_row.qtpl:113
			switch {
//line table_row.qtpl:114
			case col.SelectOptions != nil:
//line table_row.qtpl:114
				qw422016.N().S(`<select`)
//line table_row.qtpl:115
				col.StreamRenderAttr(qw422016, i)
//line table_row.qtpl:115
				qw422016.N().S(`data-name="`)
//line table_row.qtpl:115
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:115
				qw422016.N().S(`" onchange="filterTableData(this.selectedOptions[0].text, 'table-col-`)
//line table_row.qtpl:115
				qw422016.N().D(i)
//line table_row.qtpl:115
				qw422016.N().S(`');">`)
//line table_row.qtpl:117
				sortList := make([]string, 0, len(col.SelectOptions))
				for title := range col.SelectOptions {
					sortList = append(sortList, title)
				}
				sort.Strings(sortList)

//line table_row.qtpl:122
				qw422016.N().S(`<option value="" >All</option>`)
//line table_row.qtpl:124
				for _, title := range sortList {
//line table_row.qtpl:124
					qw422016.N().S(`<option value="`)
//line table_row.qtpl:125
					qw422016.E().S(col.SelectOptions[title].Value)
//line table_row.qtpl:125
					qw422016.N().S(`" >`)
//line table_row.qtpl:125
					qw422016.E().S(title)
//line table_row.qtpl:125
					qw422016.N().S(`</option>`)
//line table_row.qtpl:126
				}
//line table_row.qtpl:126
				qw422016.N().S(`</select>`)
//line table_row.qtpl:128
			case col.InputType == "file":
//line table_row.qtpl:128
				qw422016.N().S(`<span class="hiddenInput" style="background-image: url('%v val %');"> </span>`)
//line table_row.qtpl:130
			case col.Suggestions > "":
//line table_row.qtpl:130
				qw422016.N().S(`<input type="text" src="`)
//line table_row.qtpl:131
				qw422016.N().J(col.Suggestions)
//line table_row.qtpl:131
				qw422016.N().S(`" data="`)
//line table_row.qtpl:131
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:131
				qw422016.N().S(`-sel" data-name="`)
//line table_row.qtpl:131
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:131
				qw422016.N().S(`"autocapitalize="none" autocorrect="off" autocomplete="off"onkeyup="inputSearchKeyUp(this,event);" onchange="filterTableData(this.value, 'table-col-`)
//line table_row.qtpl:133
				qw422016.N().D(i)
//line table_row.qtpl:133
				qw422016.N().S(`');" /><select`)
//line table_row.qtpl:134
				col.StreamRenderAttr(qw422016, i)
//line table_row.qtpl:134
				qw422016.N().S(`size=10 class="suggestions-select-hide`)
//line table_row.qtpl:134
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:134
				qw422016.N().S(`-sel" style="left: -399.109375px; top: 50px;"></select>`)
//line table_row.qtpl:136
			case col.InputType == "date" || col.InputType == "datetime":
//line table_row.qtpl:136
				qw422016.N().S(`<input type="date-range" data-name="`)
//line table_row.qtpl:137
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:137
				qw422016.N().S(`" data-class='table-col-`)
//line table_row.qtpl:137
				qw422016.N().D(i)
//line table_row.qtpl:137
				qw422016.N().S(`'/><span class="tooltiptext">Click to show calendar</span>`)
//line table_row.qtpl:139
			case col.InputType == "number":
//line table_row.qtpl:139
				qw422016.N().S(`<input type="number-range" data-name="`)
//line table_row.qtpl:140
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:140
				qw422016.N().S(`" mask="^/[[(](\d+.?\d*)?,(\d+.?\d*)?[\])]/$" onchange="filterTableData(this.value, 'table-col-`)
//line table_row.qtpl:140
				qw422016.N().D(i)
//line table_row.qtpl:140
				qw422016.N().S(`');"/><span class="tooltiptext">Range format: '[numberFrom, numberTo]' or '(numberFrom, numberTo)'</span>`)
//line table_row.qtpl:142
			default:
//line table_row.qtpl:142
				qw422016.N().S(`<input type="`)
//line table_row.qtpl:143
				qw422016.E().S(col.InputType)
//line table_row.qtpl:143
				qw422016.N().S(`" data-name="`)
//line table_row.qtpl:143
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:143
				qw422016.N().S(`" onchange="filterTableData(this.value, 'table-col-`)
//line table_row.qtpl:143
				qw422016.N().D(i)
//line table_row.qtpl:143
				qw422016.N().S(`');"/>`)
//line table_row.qtpl:144
			}
//line table_row.qtpl:145
		}
//line table_row.qtpl:145
		qw422016.N().S(`</div></div>`)
//line table_row.qtpl:148
	}
//line table_row.qtpl:148
	qw422016.N().S(`</div></div><div class="usr-table-content"><div class="usr-table-content-scroll">`)
//line table_row.qtpl:153
	t.StreamRenderRows(qw422016)
//line table_row.qtpl:153
	qw422016.N().S(`</div></div></div>`)
//line table_row.qtpl:157
}

//line table_row.qtpl:157
func (t *TableRender) WriteAllTable(qq422016 qtio422016.Writer) {
//line table_row.qtpl:157
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:157
	t.StreamAllTable(qw422016)
//line table_row.qtpl:157
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:157
}

//line table_row.qtpl:157
func (t *TableRender) AllTable() string {
//line table_row.qtpl:157
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:157
	t.WriteAllTable(qb422016)
//line table_row.qtpl:157
	qs422016 := string(qb422016.B)
//line table_row.qtpl:157
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:157
	return qs422016
//line table_row.qtpl:157
}

//line table_row.qtpl:158
func (t *TableRender) StreamRenderRowsStyles(qw422016 *qt422016.Writer, lSymb int, colLen, colDeep []int) {
//line table_row.qtpl:158
	qw422016.N().S(`<style>`)
//line table_row.qtpl:161
	allWidth := 0

//line table_row.qtpl:163
	for i, cLen := range colLen {
//line table_row.qtpl:165
		if t.columns[i].BasicType() == types.UnsafePointer && (cLen < 10*lSymb) {
			cLen = 10 * lSymb
		} else if (cLen > 50*lSymb) && (colDeep[i] == 1) {
			cLen = 50 * lSymb
		}
		allWidth += cLen

//line table_row.qtpl:172
		qw422016.N().S(`.table-col-`)
//line table_row.qtpl:173
		qw422016.N().D(i)
//line table_row.qtpl:173
		qw422016.N().S(`{width:`)
//line table_row.qtpl:174
		qw422016.N().D(cLen)
//line table_row.qtpl:174
		qw422016.N().S(`px;}`)
//line table_row.qtpl:176
	}
//line table_row.qtpl:176
	qw422016.N().S(`.table-custom, .usr-table-content {width:`)
//line table_row.qtpl:178
	qw422016.N().D(allWidth)
//line table_row.qtpl:178
	qw422016.N().S(`px;}</style>`)
//line table_row.qtpl:181
}

//line table_row.qtpl:181
func (t *TableRender) WriteRenderRowsStyles(qq422016 qtio422016.Writer, lSymb int, colLen, colDeep []int) {
//line table_row.qtpl:181
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:181
	t.StreamRenderRowsStyles(qw422016, lSymb, colLen, colDeep)
//line table_row.qtpl:181
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:181
}

//line table_row.qtpl:181
func (t *TableRender) RenderRowsStyles(lSymb int, colLen, colDeep []int) string {
//line table_row.qtpl:181
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:181
	t.WriteRenderRowsStyles(qb422016, lSymb, colLen, colDeep)
//line table_row.qtpl:181
	qs422016 := string(qb422016.B)
//line table_row.qtpl:181
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:181
	return qs422016
//line table_row.qtpl:181
}

//line table_row.qtpl:182
func StreamRenderTime(qw422016 *qt422016.Writer, i int, val time.Time) {
//line table_row.qtpl:183
	hour, min, sec := val.Clock()

//line table_row.qtpl:184
	if hour > 0 || min > 0 || sec > 0 {
//line table_row.qtpl:184
		qw422016.N().S(`<style> .usr-table-row-cont > .usr-table-row > .table-col-`)
//line table_row.qtpl:185
		qw422016.N().D(i)
//line table_row.qtpl:185
		qw422016.N().S(`{word-break: break-word;}</style>`)
//line table_row.qtpl:189
		if val.Location() == time.UTC {
//line table_row.qtpl:190
			qw422016.N().S(val.Format("2006-01-02 15:04:05"))
//line table_row.qtpl:191
		} else {
//line table_row.qtpl:192
			qw422016.N().S(val.Format("2006-01-02 15:04:05 Z-0700"))
//line table_row.qtpl:193
		}
//line table_row.qtpl:194
	} else {
//line table_row.qtpl:195
		qw422016.E().S(val.Format("2006-01-02"))
//line table_row.qtpl:196
	}
//line table_row.qtpl:197
}

//line table_row.qtpl:197
func WriteRenderTime(qq422016 qtio422016.Writer, i int, val time.Time) {
//line table_row.qtpl:197
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:197
	StreamRenderTime(qw422016, i, val)
//line table_row.qtpl:197
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:197
}

//line table_row.qtpl:197
func RenderTime(i int, val time.Time) string {
//line table_row.qtpl:197
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:197
	WriteRenderTime(qb422016, i, val)
//line table_row.qtpl:197
	qs422016 := string(qb422016.B)
//line table_row.qtpl:197
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:197
	return qs422016
//line table_row.qtpl:197
}

// func render Table rows{

//line table_row.qtpl:199
func (t *TableRender) StreamRenderRows(qw422016 *qt422016.Writer) {
//line table_row.qtpl:201
	colLen := make([]int, len(t.columns))
	colDeep := make([]int, len(t.columns))
	lSymb := 11
	for i, col := range t.columns {
		colLen[i] = len(col.Label) * lSymb
		colDeep[i] = 1
	}

//line table_row.qtpl:208
	qw422016.N().S(`<div class="usr-table-row-cont">`)
//line table_row.qtpl:210
	for i, row := range t.rows {
//line table_row.qtpl:210
		qw422016.N().S(`<div class="usr-table-row"`)
//line table_row.qtpl:212
		if i == (2 + len(t.rows)/2) {
//line table_row.qtpl:212
			qw422016.N().S(`hx-swap="afterend" hx-select=".usr-table-row-cont" hx-trigger='intersect once' hx-get='`)
//line table_row.qtpl:213
			qw422016.E().S(t.ApiURL)
//line table_row.qtpl:213
			qw422016.N().S(`browse' hx-vals='js:{...reqParams()}'`)
//line table_row.qtpl:214
		}
//line table_row.qtpl:214
		qw422016.N().S(`>`)
//line table_row.qtpl:216
		for i, column := range t.columns {
//line table_row.qtpl:216
			qw422016.N().S(`<div class="usr-table-col  table-col-`)
//line table_row.qtpl:217
			qw422016.N().D(i)
//line table_row.qtpl:217
			qw422016.N().S(`">`)
//line table_row.qtpl:218
			switch val := row[i].(type) {
//line table_row.qtpl:219
			case time.Time:
//line table_row.qtpl:219
				qw422016.N().S(RenderTime(i, val))
//line table_row.qtpl:220
			case string:
//line table_row.qtpl:221
				qw422016.N().S(val)
//line table_row.qtpl:223
				lenVal := lSymb
				s := regHTML.FindString(val)
				if len(s) > 0 {
					lenVal *= len(s)
				} else {
					lenVal *= len(val)
				}

				if lenVal > colLen[i] && (column.Name() != "id") {
					colLen[i] = lenVal
				}

//line table_row.qtpl:235
			case bool:
//line table_row.qtpl:236
				if val {
//line table_row.qtpl:236
					qw422016.N().S(`<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="m10.6 16.6 7.05-7.05-1.4-1.4-5.65 5.65-2.85-2.85-1.4 1.4ZM12 22q-2.075 0-3.9-.788-1.825-.787-3.175-2.137-1.35-1.35-2.137-3.175Q2 14.075 2 12t.788-3.9q.787-1.825 2.137-3.175 1.35-1.35 3.175-2.138Q9.925 2 12 2t3.9.787q1.825.788 3.175 2.138 1.35 1.35 2.137 3.175Q22 9.925 22 12t-.788 3.9q-.787 1.825-2.137 3.175-1.35 1.35-3.175 2.137Q14.075 22 12 22Zm0-2q3.35 0 5.675-2.325Q20 15.35 20 12q0-3.35-2.325-5.675Q15.35 4 12 4 8.65 4 6.325 6.325 4 8.65 4 12q0 3.35 2.325 5.675Q8.65 20 12 20Zm0-8Z"/></svg>`)
//line table_row.qtpl:238
				}
//line table_row.qtpl:239
			case int, int32, int64:
//line table_row.qtpl:240
				s := fmt.Sprintf("%v", val)
				if lenVal := (len(s) + 2) * lSymb; lenVal > colLen[i] {
					colLen[i] = lenVal
				}

//line table_row.qtpl:245
				qw422016.E().S(s)
//line table_row.qtpl:246
			case float32:
//line table_row.qtpl:246
				qw422016.N().V(val)
//line table_row.qtpl:247
			case float64:
//line table_row.qtpl:247
				qw422016.N().FPrec(val, 2)
//line table_row.qtpl:248
			case []string:
//line table_row.qtpl:250
				for _, str := range val {
//line table_row.qtpl:250
					qw422016.N().S(`<p>`)
//line table_row.qtpl:251
					qw422016.N().S(str)
//line table_row.qtpl:251
					qw422016.N().S(`</p>`)
//line table_row.qtpl:253
					lenVal := lSymb * (len(str) + 2)
					if lenVal > colLen[i] {
						colLen[i] = lenVal
					}

//line table_row.qtpl:258
				}
//line table_row.qtpl:260
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

//line table_row.qtpl:265
			case []int32:
//line table_row.qtpl:266
				for _, val := range val {
//line table_row.qtpl:266
					qw422016.N().S(`<p>`)
//line table_row.qtpl:267
					qw422016.N().V(val)
//line table_row.qtpl:267
					qw422016.N().S(`</p>`)
//line table_row.qtpl:268
				}
//line table_row.qtpl:270
			case []int64:
//line table_row.qtpl:271
				for _, val := range val {
//line table_row.qtpl:271
					qw422016.N().S(`<p>`)
//line table_row.qtpl:272
					qw422016.N().V(val)
//line table_row.qtpl:272
					qw422016.N().S(`</p>`)
//line table_row.qtpl:273
				}
//line table_row.qtpl:275
			case []float32:
//line table_row.qtpl:276
				for _, val := range val {
//line table_row.qtpl:276
					qw422016.N().S(`<p>`)
//line table_row.qtpl:277
					qw422016.N().V(val)
//line table_row.qtpl:277
					qw422016.N().S(`</p>`)
//line table_row.qtpl:278
				}
//line table_row.qtpl:280
			case []float64:
//line table_row.qtpl:281
				for _, val := range val {
//line table_row.qtpl:281
					qw422016.N().S(`<p>`)
//line table_row.qtpl:282
					qw422016.N().V(val)
//line table_row.qtpl:282
					qw422016.N().S(`</p>`)
//line table_row.qtpl:283
				}
//line table_row.qtpl:285
			case map[string]string:
//line table_row.qtpl:285
				qw422016.N().S(`<table>`)
//line table_row.qtpl:289
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

				sortList := make([]string, 0, len(val))
				for name := range val {
					sortList = append(sortList, name)
				}
				sort.Strings(sortList)

//line table_row.qtpl:299
				for _, key := range sortList {
//line table_row.qtpl:299
					qw422016.N().S(`<tr><td><b>`)
//line table_row.qtpl:300
					qw422016.N().S(key)
//line table_row.qtpl:300
					qw422016.N().S(`</b></td><td>`)
//line table_row.qtpl:300
					qw422016.N().S(val[key])
//line table_row.qtpl:300
					qw422016.N().S(`</td></tr>`)
//line table_row.qtpl:302
					lenVal := (lSymb+2)*len(key) + lSymb*len(val[key]) + 2
					if lenVal > colLen[i] {
						colLen[i] = lenVal
					}

//line table_row.qtpl:307
				}
//line table_row.qtpl:307
				qw422016.N().S(`</table>`)
//line table_row.qtpl:310
			case map[string]any:
//line table_row.qtpl:313
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

				sortList := make([]string, 0, len(val))
				for name := range val {
					sortList = append(sortList, name)
				}
				sort.Strings(sortList)

//line table_row.qtpl:323
				for _, key := range sortList {
//line table_row.qtpl:323
					qw422016.N().S(`<b>`)
//line table_row.qtpl:324
					qw422016.N().S(key)
//line table_row.qtpl:324
					qw422016.N().S(`</b>:`)
//line table_row.qtpl:324
					json.StreamElement(qw422016, val[key])
//line table_row.qtpl:324
					qw422016.N().S(`<br>`)
//line table_row.qtpl:325
				}
//line table_row.qtpl:327
			case []any:
//line table_row.qtpl:329
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

//line table_row.qtpl:333
				for _, value := range val {
//line table_row.qtpl:335
					if m, ok := value.(map[string]any); ok {
//line table_row.qtpl:335
						qw422016.N().S(`<p>`)
//line table_row.qtpl:337
						for key, value := range m {
//line table_row.qtpl:337
							qw422016.N().S(`<b>`)
//line table_row.qtpl:338
							qw422016.E().S(key)
//line table_row.qtpl:338
							qw422016.N().S(`</b>:`)
//line table_row.qtpl:338
							json.StreamElement(qw422016, value)
//line table_row.qtpl:338
							qw422016.N().S(`<br>`)
//line table_row.qtpl:339
						}
//line table_row.qtpl:339
						qw422016.N().S(`</p>`)
//line table_row.qtpl:341
					} else {
//line table_row.qtpl:342
						json.StreamElement(qw422016, value)
//line table_row.qtpl:343
					}
//line table_row.qtpl:345
				}
//line table_row.qtpl:346
			default:
//line table_row.qtpl:347
				json.StreamElement(qw422016, row[i])
//line table_row.qtpl:348
			}
//line table_row.qtpl:348
			qw422016.N().S(`</div>`)
//line table_row.qtpl:350
		}
//line table_row.qtpl:350
		qw422016.N().S(`</div>`)
//line table_row.qtpl:353
	}
//line table_row.qtpl:353
	qw422016.N().S(`</div>`)
//line table_row.qtpl:355
	t.StreamRenderRowsStyles(qw422016, lSymb, colLen, colDeep)
//line table_row.qtpl:355
	qw422016.N().S(`<script>SetTableEvents()</script>`)
//line table_row.qtpl:359
}

//line table_row.qtpl:359
func (t *TableRender) WriteRenderRows(qq422016 qtio422016.Writer) {
//line table_row.qtpl:359
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:359
	t.StreamRenderRows(qw422016)
//line table_row.qtpl:359
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:359
}

//line table_row.qtpl:359
func (t *TableRender) RenderRows() string {
//line table_row.qtpl:359
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:359
	t.WriteRenderRows(qb422016)
//line table_row.qtpl:359
	qs422016 := string(qb422016.B)
//line table_row.qtpl:359
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:359
	return qs422016
//line table_row.qtpl:359
}

// }
