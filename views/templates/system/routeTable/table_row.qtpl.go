/*
 * Copyright (c) 2023. Author: Ruslan Bikchentaev. All rights reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file.
 * Перший приватний програміст.
 */

// Code generated by qtc from "table_row.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line table_row.qtpl:1
package routeTable

//line table_row.qtpl:1
import (
	"fmt"
	"go/types"
	"regexp"
	"sort"
	"time"

	"github.com/ruslanBik4/httpgo/views/templates/forms"
	"github.com/ruslanBik4/httpgo/views/templates/json"
)

//line table_row.qtpl:12
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line table_row.qtpl:12
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line table_row.qtpl:13
var regHTML = regexp.MustCompile(`>([^<]+)<\/`)

//line table_row.qtpl:15
func StreamTableRow(qw422016 *qt422016.Writer, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:15
	qw422016.N().S(`
	`)
//line table_row.qtpl:16
	StreamTable(qw422016, "test", columns, rows)
//line table_row.qtpl:16
	qw422016.N().S(`
`)
//line table_row.qtpl:17
}

//line table_row.qtpl:17
func WriteTableRow(qq422016 qtio422016.Writer, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:17
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:17
	StreamTableRow(qw422016, columns, rows)
//line table_row.qtpl:17
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:17
}

//line table_row.qtpl:17
func TableRow(columns []*forms.ColumnDecor, rows [][]any) string {
//line table_row.qtpl:17
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:17
	WriteTableRow(qb422016, columns, rows)
//line table_row.qtpl:17
	qs422016 := string(qb422016.B)
//line table_row.qtpl:17
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:17
	return qs422016
//line table_row.qtpl:17
}

//line table_row.qtpl:18
func StreamTable(qw422016 *qt422016.Writer, name string, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:18
	qw422016.N().S(`
<style>
`)
//line table_row.qtpl:20
	StreamTableCSS(qw422016)
//line table_row.qtpl:20
	qw422016.N().S(`
`)
//line table_row.qtpl:22
	colLen := make([]int, len(columns))
	colDeep := make([]int, len(columns))
	lSymb := 11
	allWidth := 0
	for i, col := range columns {
		colLen[i] = len(col.Label) * lSymb
		colDeep[i] = 1
	}

//line table_row.qtpl:30
	qw422016.N().S(`
</style>
<script>
function ClickPseudo(event) {
var elem = event.target;
var offset = event.offsetX || event.originalEvent.offsetX;
    console.log(`)
//line table_row.qtpl:30
	qw422016.N().S("`")
//line table_row.qtpl:30
	qw422016.N().S(`${offset} > ${elem.offsetWidth}`)
//line table_row.qtpl:30
	qw422016.N().S("`")
//line table_row.qtpl:30
	qw422016.N().S(`);
    if (offset > elem.offsetWidth) {
        loadTable(elem.attributes.column.value);
    } else {
        elem.color = 'blue';
    }
}
function loadTable(order_by) {
$.ajaxSetup({
    'headers':{'Authorization': 'Bearer ' + token}
});
var url = document.location.href;
if (document.location.search > "") {
	url += '&'
} else {
	url +='?'
}
$('.usr-table-row-cont').load(url + 'order_by=' + order_by + ' .usr-table-row-cont');
return true;

       $.ajax({
            url: 'https://localhost/table/projects/browse?order_by=name .usr-table-row-cont',
             data: {
                     "lang": lang,
                     "html": true
             },
            processData: false,
            contentType: false,
          beforeSend: function (xhr) {
              xhr.setRequestHeader('Authorization', 'Bearer ' + token);
          },
          success: function (data, status, xhr) {
                $('.usr-table-row-cont').html(data);
          },
          error: function (xhr, status, error) {
              if (xhr.status == 401) {
                urlAfterLogin = url;
                $('#bLogin').trigger("click");
               return;
              }

              alert( "Code : " + xhr.status + ", "+ error + ": "+ xhr.responseText);
              console.log(xhr);
          }
         });
         return false;
}
function getElementsByText(str, name) {
  var items = document.getElementsByClassName(name);
  var elem = Array.prototype.slice.call(items).forEach(
  function(el, ind, arr) {
    if (str.trim() == "") {
        el.parentElement.style = "";
        return true;
    }
    if ( el.textContent.includes( str.trim() )
        || el.parentElement.className.includes("usr-table__t-head")
        || el.parentElement.className.includes("usr-table__filter")) {
        el.parentElement.style = "";
        return true;
    }
     el.parentElement.style = "display:none";
    });
    return
  if (elem.length > 0) {
//todo- chg on each
    elem[0].scrollIntoView({block: "center", behavior: "smooth"});
    elem[0].focus();
    elem[0].animate([
      {color: 'blue'},
      {color: 'red'}
    ], {
        duration: 3000,
        iterations: 100
    });
  }
}
function ScrollToElem(selector) {
	var list = $(selector);
	if (list.length > 0) {
		list[0].scrollIntoView(100);
	} else {
		alert(selector + ' not found!');
	}
	return true;
}
$(function(){
 $('.usr-table__t-head .usr-table-col:nth-child(n+2)  span').click(ClickPseudo);
});
</script>
`)
//line table_row.qtpl:126
	qw422016.N().S(` `)
//line table_row.qtpl:127
	qw422016.N().S(`<title> Table of "`)
//line table_row.qtpl:128
	qw422016.E().S(name)
//line table_row.qtpl:128
	qw422016.N().S(`"</title><div class="usr-table  table-custom" id="t_`)
//line table_row.qtpl:129
	qw422016.E().S(name)
//line table_row.qtpl:129
	qw422016.N().S(`"><div class="usr-table-header"><div class="usr-table__t-head  usr-table-row">`)
//line table_row.qtpl:132
	for i, col := range columns {
//line table_row.qtpl:132
		qw422016.N().S(`<div class="usr-table-col  table-col-`)
//line table_row.qtpl:133
		qw422016.N().D(i)
//line table_row.qtpl:133
		qw422016.N().S(`" a=`)
//line table_row.qtpl:133
		qw422016.N().D(i)
//line table_row.qtpl:133
		qw422016.N().S(`>`)
//line table_row.qtpl:134
		if col.Label == "id" && i < len(columns)-1 {
//line table_row.qtpl:134
			qw422016.N().S(`<style> .usr-table-header > .usr-table__t-head > .table-col-`)
//line table_row.qtpl:135
			qw422016.N().D(i)
//line table_row.qtpl:135
			qw422016.N().S(`{position: sticky;}</style>	                <ul class="top-mnu-list" style="z-index:100;"><li><a>#</a><ul class="dropdown">go to column...`)
//line table_row.qtpl:140
			for j, c := range columns[i+1:] {
//line table_row.qtpl:140
				qw422016.N().S(`<li class="top-mnu-item"><a href='#' onclick="return ScrollToElem('.table-col-`)
//line table_row.qtpl:142
				qw422016.N().D(i + j + 1)
//line table_row.qtpl:142
				qw422016.N().S(`');" title='`)
//line table_row.qtpl:142
				qw422016.E().S(c.Label)
//line table_row.qtpl:142
				qw422016.N().S(`'>`)
//line table_row.qtpl:143
				qw422016.E().S(fmt.Sprintf("%.20s", c.Label))
//line table_row.qtpl:143
				qw422016.N().S(`</a></li>`)
//line table_row.qtpl:145
			}
//line table_row.qtpl:145
			qw422016.N().S(`</ul></li></ul>`)
//line table_row.qtpl:147
		} else {
//line table_row.qtpl:147
			qw422016.N().S(`<span column="`)
//line table_row.qtpl:147
			qw422016.E().S(col.Name())
//line table_row.qtpl:147
			qw422016.N().S(`">`)
//line table_row.qtpl:147
			qw422016.E().S(col.Label)
//line table_row.qtpl:147
			qw422016.N().S(`</span>`)
//line table_row.qtpl:148
		}
//line table_row.qtpl:148
		qw422016.N().S(`</div>`)
//line table_row.qtpl:150
	}
//line table_row.qtpl:150
	qw422016.N().S(`</div><div class="usr-table__filter  usr-table-row">`)
//line table_row.qtpl:154
	for i, col := range columns {
//line table_row.qtpl:154
		qw422016.N().S(`<div class="usr-table-col table-col-`)
//line table_row.qtpl:155
		qw422016.N().D(i)
//line table_row.qtpl:155
		qw422016.N().S(`"><div class="filt-arrow">`)
//line table_row.qtpl:157
		if col.LinkNew > "" {
//line table_row.qtpl:157
			qw422016.N().S(col.LinkNew)
//line table_row.qtpl:158
		} else {
//line table_row.qtpl:159
			switch {
//line table_row.qtpl:160
			case col.SelectOptions != nil:
//line table_row.qtpl:160
				qw422016.N().S(`<select`)
//line table_row.qtpl:161
				col.StreamRenderAttr(qw422016, i)
//line table_row.qtpl:161
				qw422016.N().S(`onchange="getElementsByText(this.value, 'table-col-`)
//line table_row.qtpl:161
				qw422016.N().D(i)
//line table_row.qtpl:161
				qw422016.N().S(`');">`)
//line table_row.qtpl:163
				sortList := make([]string, 0, len(col.SelectOptions))
				for title := range col.SelectOptions {
					sortList = append(sortList, title)
				}
				sort.Strings(sortList)

//line table_row.qtpl:168
				qw422016.N().S(`<option value="" >All</option>`)
//line table_row.qtpl:170
				for _, title := range sortList {
//line table_row.qtpl:170
					qw422016.N().S(`<option value="`)
//line table_row.qtpl:171
					qw422016.E().S(title)
//line table_row.qtpl:171
					qw422016.N().S(`" >`)
//line table_row.qtpl:171
					qw422016.E().S(title)
//line table_row.qtpl:171
					qw422016.N().S(`</option>`)
//line table_row.qtpl:172
				}
//line table_row.qtpl:172
				qw422016.N().S(`</select>`)
//line table_row.qtpl:174
			case col.InputType == "file":
//line table_row.qtpl:174
				qw422016.N().S(`<span class="hiddenInput" style="background-image: url('%v val %');"> </span>`)
//line table_row.qtpl:176
			case col.Suggestions > "":
//line table_row.qtpl:176
				qw422016.N().S(`<input type="text" src="`)
//line table_row.qtpl:177
				qw422016.N().J(col.Suggestions)
//line table_row.qtpl:177
				qw422016.N().S(`" data="`)
//line table_row.qtpl:177
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:177
				qw422016.N().S(`-sel"autocapitalize="none" autocorrect="off" autocomplete="off"onkeyup="inputSearchKeyUp(this,event);" /><select`)
//line table_row.qtpl:180
				col.StreamRenderAttr(qw422016, i)
//line table_row.qtpl:180
				qw422016.N().S(`size=10 class="suggestions-select-hide`)
//line table_row.qtpl:180
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:180
				qw422016.N().S(`-sel" style="left: -399.109375px; top: 50px;"></select>`)
//line table_row.qtpl:182
			default:
//line table_row.qtpl:182
				qw422016.N().S(`<input type="`)
//line table_row.qtpl:183
				qw422016.E().S(col.InputType)
//line table_row.qtpl:183
				qw422016.N().S(`" onchange="getElementsByText(this.value, 'table-col-`)
//line table_row.qtpl:183
				qw422016.N().D(i)
//line table_row.qtpl:183
				qw422016.N().S(`');"/>`)
//line table_row.qtpl:184
			}
//line table_row.qtpl:185
		}
//line table_row.qtpl:185
		qw422016.N().S(`</div></div>`)
//line table_row.qtpl:188
	}
//line table_row.qtpl:188
	qw422016.N().S(`</div></div><div class="usr-table-content"><div class="usr-table-content-scroll"><div class="usr-table-row-cont">`)
//line table_row.qtpl:196
	for _, row := range rows {
//line table_row.qtpl:196
		qw422016.N().S(`<div  class="usr-table-row">`)
//line table_row.qtpl:200
		for i, column := range columns {
//line table_row.qtpl:200
			qw422016.N().S(`<div class="usr-table-col  table-col-`)
//line table_row.qtpl:201
			qw422016.N().D(i)
//line table_row.qtpl:201
			qw422016.N().S(`">`)
//line table_row.qtpl:202
			switch val := row[i].(type) {
//line table_row.qtpl:203
			case time.Time:
//line table_row.qtpl:203
				qw422016.N().S(RenderTime(i, val))
//line table_row.qtpl:204
			case string:
//line table_row.qtpl:205
				qw422016.N().S(val)
//line table_row.qtpl:207
				lenVal := lSymb
				s := regHTML.FindString(val)
				if len(s) > 0 {
					lenVal *= len(s)
				} else {
					lenVal *= len(val)
				}

				if lenVal > colLen[i] && (column.Name() != "id") {
					colLen[i] = lenVal
				}

//line table_row.qtpl:219
			case bool:
//line table_row.qtpl:220
				if val {
//line table_row.qtpl:220
					qw422016.N().S(`<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="m10.6 16.6 7.05-7.05-1.4-1.4-5.65 5.65-2.85-2.85-1.4 1.4ZM12 22q-2.075 0-3.9-.788-1.825-.787-3.175-2.137-1.35-1.35-2.137-3.175Q2 14.075 2 12t.788-3.9q.787-1.825 2.137-3.175 1.35-1.35 3.175-2.138Q9.925 2 12 2t3.9.787q1.825.788 3.175 2.138 1.35 1.35 2.137 3.175Q22 9.925 22 12t-.788 3.9q-.787 1.825-2.137 3.175-1.35 1.35-3.175 2.137Q14.075 22 12 22Zm0-2q3.35 0 5.675-2.325Q20 15.35 20 12q0-3.35-2.325-5.675Q15.35 4 12 4 8.65 4 6.325 6.325 4 8.65 4 12q0 3.35 2.325 5.675Q8.65 20 12 20Zm0-8Z"/></svg>`)
//line table_row.qtpl:222
				}
//line table_row.qtpl:223
			case int, int32, int64:
//line table_row.qtpl:224
				s := fmt.Sprintf("%v", val)
				if lenVal := len(s) * lSymb; lenVal > colLen[i] {
					colLen[i] = lenVal
				}

//line table_row.qtpl:229
				qw422016.E().S(s)
//line table_row.qtpl:230
			case float32:
//line table_row.qtpl:230
				qw422016.N().V(val)
//line table_row.qtpl:231
			case float64:
//line table_row.qtpl:231
				qw422016.N().FPrec(val, 2)
//line table_row.qtpl:232
			case []string:
//line table_row.qtpl:234
				for _, str := range val {
//line table_row.qtpl:234
					qw422016.N().S(`<p>`)
//line table_row.qtpl:235
					qw422016.N().S(str)
//line table_row.qtpl:235
					qw422016.N().S(`</p>`)
//line table_row.qtpl:237
					lenVal := lSymb * (len(str) + 2)
					if lenVal > colLen[i] {
						colLen[i] = lenVal
					}

//line table_row.qtpl:242
				}
//line table_row.qtpl:244
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

//line table_row.qtpl:249
			case []int32:
//line table_row.qtpl:250
				for _, val := range val {
//line table_row.qtpl:251
					qw422016.N().V(val)
//line table_row.qtpl:252
				}
//line table_row.qtpl:254
			case []int64:
//line table_row.qtpl:255
				for _, val := range val {
//line table_row.qtpl:256
					qw422016.N().V(val)
//line table_row.qtpl:257
				}
//line table_row.qtpl:259
			case map[string]string:
//line table_row.qtpl:259
				qw422016.N().S(`<table>`)
//line table_row.qtpl:263
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

				sortList := make([]string, 0, len(val))
				for name := range val {
					sortList = append(sortList, name)
				}
				sort.Strings(sortList)

//line table_row.qtpl:273
				for _, key := range sortList {
//line table_row.qtpl:273
					qw422016.N().S(`<tr><td><b>`)
//line table_row.qtpl:274
					qw422016.N().S(key)
//line table_row.qtpl:274
					qw422016.N().S(`</b></td><td>`)
//line table_row.qtpl:274
					qw422016.N().S(val[key])
//line table_row.qtpl:274
					qw422016.N().S(`</td></tr>`)
//line table_row.qtpl:276
					lenVal := (lSymb+2)*len(key) + lSymb*len(val[key]) + 2
					if lenVal > colLen[i] {
						colLen[i] = lenVal
					}

//line table_row.qtpl:281
				}
//line table_row.qtpl:281
				qw422016.N().S(`</table>`)
//line table_row.qtpl:284
			case map[string]any:
//line table_row.qtpl:287
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

				sortList := make([]string, 0, len(val))
				for name := range val {
					sortList = append(sortList, name)
				}
				sort.Strings(sortList)

//line table_row.qtpl:297
				for _, key := range sortList {
//line table_row.qtpl:297
					qw422016.N().S(`<b>`)
//line table_row.qtpl:298
					qw422016.N().S(key)
//line table_row.qtpl:298
					qw422016.N().S(`</b>:`)
//line table_row.qtpl:298
					json.StreamElement(qw422016, val[key])
//line table_row.qtpl:298
					qw422016.N().S(`<br>`)
//line table_row.qtpl:299
				}
//line table_row.qtpl:301
			case []any:
//line table_row.qtpl:303
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

//line table_row.qtpl:307
				for _, value := range val {
//line table_row.qtpl:309
					if m, ok := value.(map[string]any); ok {
//line table_row.qtpl:309
						qw422016.N().S(`<p>`)
//line table_row.qtpl:311
						for key, value := range m {
//line table_row.qtpl:311
							qw422016.N().S(`<b>`)
//line table_row.qtpl:312
							qw422016.E().S(key)
//line table_row.qtpl:312
							qw422016.N().S(`</b>:`)
//line table_row.qtpl:312
							json.StreamElement(qw422016, value)
//line table_row.qtpl:312
							qw422016.N().S(`<br>`)
//line table_row.qtpl:313
						}
//line table_row.qtpl:313
						qw422016.N().S(`</p>`)
//line table_row.qtpl:315
					} else {
//line table_row.qtpl:316
						json.StreamElement(qw422016, value)
//line table_row.qtpl:317
					}
//line table_row.qtpl:319
				}
//line table_row.qtpl:320
			default:
//line table_row.qtpl:321
				json.StreamElement(qw422016, row[i])
//line table_row.qtpl:322
			}
//line table_row.qtpl:322
			qw422016.N().S(`</div>`)
//line table_row.qtpl:324
		}
//line table_row.qtpl:324
		qw422016.N().S(`</div>`)
//line table_row.qtpl:328
	}
//line table_row.qtpl:328
	qw422016.N().S(`</div></div></div></div><style>`)
//line table_row.qtpl:335
	for i, cLen := range colLen {
//line table_row.qtpl:337
		if columns[i].BasicType() == types.UnsafePointer && (cLen < 10*lSymb) {
			cLen = 10 * lSymb
		} else if (cLen > 50*lSymb) && (colDeep[i] == 1) {
			cLen = 50 * lSymb
		}
		allWidth += cLen

//line table_row.qtpl:344
		qw422016.N().S(`.table-col-`)
//line table_row.qtpl:345
		qw422016.N().D(i)
//line table_row.qtpl:345
		qw422016.N().S(`{width:`)
//line table_row.qtpl:346
		qw422016.N().D(cLen)
//line table_row.qtpl:346
		qw422016.N().S(`px;}//    .usr-table-row-cont > .usr-table-row > .table-col-`)
//line table_row.qtpl:348
		qw422016.N().D(i)
//line table_row.qtpl:348
		qw422016.N().S(`{//       text-align:`)
//line table_row.qtpl:349
		switch columns[i].InputType {

//line table_row.qtpl:350
		case "number":
//line table_row.qtpl:350
			qw422016.N().S(`center//`)
//line table_row.qtpl:351
		case "date", "datetime":
//line table_row.qtpl:351
			qw422016.N().S(`right//`)
//line table_row.qtpl:352
		default:
//line table_row.qtpl:352
			qw422016.N().S(`left//`)
//line table_row.qtpl:353
		}
//line table_row.qtpl:353
		qw422016.N().S(`;//    }`)
//line table_row.qtpl:355
	}
//line table_row.qtpl:355
	qw422016.N().S(`.table-custom{width:`)
//line table_row.qtpl:357
	qw422016.N().D(allWidth)
//line table_row.qtpl:357
	qw422016.N().S(`px;}</style>`)
//line table_row.qtpl:360
}

//line table_row.qtpl:360
func WriteTable(qq422016 qtio422016.Writer, name string, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:360
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:360
	StreamTable(qw422016, name, columns, rows)
//line table_row.qtpl:360
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:360
}

//line table_row.qtpl:360
func Table(name string, columns []*forms.ColumnDecor, rows [][]any) string {
//line table_row.qtpl:360
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:360
	WriteTable(qb422016, name, columns, rows)
//line table_row.qtpl:360
	qs422016 := string(qb422016.B)
//line table_row.qtpl:360
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:360
	return qs422016
//line table_row.qtpl:360
}

//line table_row.qtpl:361
func StreamRenderTime(qw422016 *qt422016.Writer, i int, val time.Time) {
//line table_row.qtpl:362
	hour, min, sec := val.Clock()

//line table_row.qtpl:363
	if hour > 0 || min > 0 || sec > 0 {
//line table_row.qtpl:363
		qw422016.N().S(`<style> .usr-table-row-cont > .usr-table-row > .table-col-`)
//line table_row.qtpl:364
		qw422016.N().D(i)
//line table_row.qtpl:364
		qw422016.N().S(`{word-break: break-word;}</style>`)
//line table_row.qtpl:368
		if val.Location() == time.UTC {
//line table_row.qtpl:369
			qw422016.N().S(val.Format("2006-01-02 15:04:05"))
//line table_row.qtpl:370
		} else {
//line table_row.qtpl:371
			qw422016.N().S(val.Format("2006-01-02 15:04:05 Z-0700"))
//line table_row.qtpl:372
		}
//line table_row.qtpl:373
	} else {
//line table_row.qtpl:374
		qw422016.E().S(val.Format("2006-01-02"))
//line table_row.qtpl:375
	}
//line table_row.qtpl:376
}

//line table_row.qtpl:376
func WriteRenderTime(qq422016 qtio422016.Writer, i int, val time.Time) {
//line table_row.qtpl:376
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:376
	StreamRenderTime(qw422016, i, val)
//line table_row.qtpl:376
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:376
}

//line table_row.qtpl:376
func RenderTime(i int, val time.Time) string {
//line table_row.qtpl:376
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:376
	WriteRenderTime(qb422016, i, val)
//line table_row.qtpl:376
	qs422016 := string(qb422016.B)
//line table_row.qtpl:376
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:376
	return qs422016
//line table_row.qtpl:376
}
