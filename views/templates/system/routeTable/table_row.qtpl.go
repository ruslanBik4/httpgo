// Code generated by qtc from "table_row.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line table_row.qtpl:1
package routeTable

//line table_row.qtpl:1
import (
	"fmt"
	"go/types"
	"regexp"
	"sort"
	"time"

	"github.com/ruslanBik4/dbEngine/dbEngine"
	"github.com/ruslanBik4/httpgo/views/templates/forms"
	"github.com/ruslanBik4/httpgo/views/templates/json"
)

//line table_row.qtpl:13
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line table_row.qtpl:13
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line table_row.qtpl:14
var regHTML = regexp.MustCompile(`>([^<]+)<\/`)

type TableRender struct {
	dbEngine.Table
	columns   []*forms.ColumnDecor
	rows      [][]any
	ApiImport string
	ApiExport string
	OnlyView  bool
}

func NewTableRender(table dbEngine.Table, columns []*forms.ColumnDecor, rows [][]any, apiImport string, onlyView bool) *TableRender {
	return &TableRender{Table: table, columns: columns, rows: rows, ApiImport: apiImport + "import", ApiExport: apiImport + "export", OnlyView: onlyView}
}

//line table_row.qtpl:28
func StreamTableRow(qw422016 *qt422016.Writer, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:28
	qw422016.N().S(`
`)
//line table_row.qtpl:30
	t := &TableRender{columns: columns, rows: rows}

//line table_row.qtpl:31
	qw422016.N().S(`
<link rel="stylesheet" href="/css/tables.css" media="screen">
<script src="/js/tables.js" async></script>
	`)
//line table_row.qtpl:34
	t.StreamAllTable(qw422016)
//line table_row.qtpl:34
	qw422016.N().S(`
`)
//line table_row.qtpl:35
}

//line table_row.qtpl:35
func WriteTableRow(qq422016 qtio422016.Writer, columns []*forms.ColumnDecor, rows [][]any) {
//line table_row.qtpl:35
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:35
	StreamTableRow(qw422016, columns, rows)
//line table_row.qtpl:35
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:35
}

//line table_row.qtpl:35
func TableRow(columns []*forms.ColumnDecor, rows [][]any) string {
//line table_row.qtpl:35
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:35
	WriteTableRow(qb422016, columns, rows)
//line table_row.qtpl:35
	qs422016 := string(qb422016.B)
//line table_row.qtpl:35
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:35
	return qs422016
//line table_row.qtpl:35
}

//line table_row.qtpl:36
func (t *TableRender) StreamAllTable(qw422016 *qt422016.Writer) {
//line table_row.qtpl:36
	qw422016.N().S(`
`)
//line table_row.qtpl:37
	qw422016.N().S(` `)
//line table_row.qtpl:38
	qw422016.N().S(`<title> Table of "`)
//line table_row.qtpl:39
	qw422016.E().S(t.Comment())
//line table_row.qtpl:39
	qw422016.N().S(`"</title><div class="sidebar">`)
//line table_row.qtpl:41
	if !t.OnlyView {
//line table_row.qtpl:41
		qw422016.N().S(`<h2> Import </h2><form action="`)
//line table_row.qtpl:43
		qw422016.E().S(t.ApiImport)
//line table_row.qtpl:43
		qw422016.N().S(`" method="post" enctype="multipart/form-data" onsubmit="return saveForm(this);"><div id="divFieldImport" class="input-wrap"><label class="table-files__label" style="height:30px;" title="Choice csv-file for import to table'`)
//line table_row.qtpl:45
		qw422016.E().S(t.Comment())
//line table_row.qtpl:45
		qw422016.N().S(`'"><span class="hiddenInput"><input type="file"id="csv"name="csv"accept=".csv"onchange="handleFileCSVSelect(this);"/></span></label></div><div class="input-wrap"><label> <input type="checkbox" name="truncate_data" />Truncate table before import </label></div><div class="form-actions"><button class="btn-success mx-1" type="submit">Put in table '`)
//line table_row.qtpl:60
		qw422016.E().S(t.Name())
//line table_row.qtpl:60
		qw422016.N().S(`'</button><button class="btn-danger mx-1" type="reset">Reset form</button></div><output></output><progress value='0' max='100' hidden > </progress></form>`)
//line table_row.qtpl:66
	} else {
//line table_row.qtpl:68
	}
//line table_row.qtpl:68
	qw422016.N().S(`<h2> Export</h2><a href="`)
//line table_row.qtpl:70
	qw422016.E().S(t.ApiExport)
//line table_row.qtpl:70
	qw422016.N().S(`" download='`)
//line table_row.qtpl:70
	qw422016.E().S(t.Name())
//line table_row.qtpl:70
	qw422016.N().S(`.csv' title="Save data from '`)
//line table_row.qtpl:70
	qw422016.E().S(t.Comment())
//line table_row.qtpl:70
	qw422016.N().S(`' to disk (csv)"><svg xmlns="http://www.w3.org/2000/svg" width="2em" height="2em" fill="currentColor" class="bi bi-file-arrow-down" viewBox="0 0 16 16"><path d="M8 5a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5A.5.5 0 0 1 8 5"/><path d="M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm0 1h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1"/></svg></a></div><div class="usr-table table-custom" id="t_`)
//line table_row.qtpl:77
	qw422016.E().S(t.Name())
//line table_row.qtpl:77
	qw422016.N().S(`"><div class="usr-table-header"><div class="usr-table__t-head  usr-table-row">`)
//line table_row.qtpl:80
	for i, col := range t.columns {
//line table_row.qtpl:80
		qw422016.N().S(`<div class="usr-table-col  table-col-`)
//line table_row.qtpl:81
		qw422016.N().D(i)
//line table_row.qtpl:81
		qw422016.N().S(`" a=`)
//line table_row.qtpl:81
		qw422016.N().D(i)
//line table_row.qtpl:81
		qw422016.N().S(`>`)
//line table_row.qtpl:82
		if col.Label == "id" && i < len(t.columns)-1 {
//line table_row.qtpl:82
			qw422016.N().S(`<ul class="left-mnu-list" style="z-index:4;"><li><a>#</a><ul class="dropdown">go to column...`)
//line table_row.qtpl:85
			for j, c := range t.columns[i+1:] {
//line table_row.qtpl:85
				qw422016.N().S(`<li class="left-mnu-item"><a href='#' onclick="return ScrollToElem('.table-col-`)
//line table_row.qtpl:87
				qw422016.N().D(i + j + 1)
//line table_row.qtpl:87
				qw422016.N().S(`');" title='`)
//line table_row.qtpl:87
				qw422016.E().S(c.Label)
//line table_row.qtpl:87
				qw422016.N().S(`'>`)
//line table_row.qtpl:88
				qw422016.E().S(fmt.Sprintf("%.20s", c.Label))
//line table_row.qtpl:88
				qw422016.N().S(`</a></li>`)
//line table_row.qtpl:90
			}
//line table_row.qtpl:90
			qw422016.N().S(`</ul></li></ul>`)
//line table_row.qtpl:92
		} else {
//line table_row.qtpl:92
			qw422016.N().S(`<span column="`)
//line table_row.qtpl:92
			qw422016.E().S(col.Name())
//line table_row.qtpl:92
			qw422016.N().S(`">`)
//line table_row.qtpl:92
			qw422016.E().S(col.Label)
//line table_row.qtpl:92
			qw422016.N().S(`</span>`)
//line table_row.qtpl:93
		}
//line table_row.qtpl:93
		qw422016.N().S(`</div>`)
//line table_row.qtpl:95
	}
//line table_row.qtpl:95
	qw422016.N().S(`</div><div class="usr-table__filter  usr-table-row">`)
//line table_row.qtpl:99
	for i, col := range t.columns {
//line table_row.qtpl:99
		qw422016.N().S(`<div class="usr-table-col table-col-`)
//line table_row.qtpl:100
		qw422016.N().D(i)
//line table_row.qtpl:100
		qw422016.N().S(`"><div class="filt-arrow">`)
//line table_row.qtpl:102
		if col.LinkNew > "" {
//line table_row.qtpl:102
			qw422016.N().S(col.LinkNew)
//line table_row.qtpl:103
		} else {
//line table_row.qtpl:104
			switch {
//line table_row.qtpl:105
			case col.SelectOptions != nil:
//line table_row.qtpl:105
				qw422016.N().S(`<select`)
//line table_row.qtpl:106
				col.StreamRenderAttr(qw422016, i)
//line table_row.qtpl:106
				qw422016.N().S(`data-name="`)
//line table_row.qtpl:106
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:106
				qw422016.N().S(`" onchange="filterTableData(this.selectedOptions[0].text, 'table-col-`)
//line table_row.qtpl:106
				qw422016.N().D(i)
//line table_row.qtpl:106
				qw422016.N().S(`');">`)
//line table_row.qtpl:108
				sortList := make([]string, 0, len(col.SelectOptions))
				for title := range col.SelectOptions {
					sortList = append(sortList, title)
				}
				sort.Strings(sortList)

//line table_row.qtpl:113
				qw422016.N().S(`<option value="" >All</option>`)
//line table_row.qtpl:115
				for _, title := range sortList {
//line table_row.qtpl:115
					qw422016.N().S(`<option value="`)
//line table_row.qtpl:116
					qw422016.E().S(col.SelectOptions[title].Value)
//line table_row.qtpl:116
					qw422016.N().S(`" >`)
//line table_row.qtpl:116
					qw422016.E().S(title)
//line table_row.qtpl:116
					qw422016.N().S(`</option>`)
//line table_row.qtpl:117
				}
//line table_row.qtpl:117
				qw422016.N().S(`</select>`)
//line table_row.qtpl:119
			case col.InputType == "file":
//line table_row.qtpl:119
				qw422016.N().S(`<span class="hiddenInput" style="background-image: url('%v val %');"> </span>`)
//line table_row.qtpl:121
			case col.Suggestions > "":
//line table_row.qtpl:121
				qw422016.N().S(`<input type="text" src="`)
//line table_row.qtpl:122
				qw422016.N().J(col.Suggestions)
//line table_row.qtpl:122
				qw422016.N().S(`" data="`)
//line table_row.qtpl:122
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:122
				qw422016.N().S(`-sel" data-name="`)
//line table_row.qtpl:122
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:122
				qw422016.N().S(`"autocapitalize="none" autocorrect="off" autocomplete="off"onkeyup="inputSearchKeyUp(this,event);" onchange="filterTableData(this.value, 'table-col-`)
//line table_row.qtpl:124
				qw422016.N().D(i)
//line table_row.qtpl:124
				qw422016.N().S(`');" /><select`)
//line table_row.qtpl:125
				col.StreamRenderAttr(qw422016, i)
//line table_row.qtpl:125
				qw422016.N().S(`size=10 class="suggestions-select-hide`)
//line table_row.qtpl:125
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:125
				qw422016.N().S(`-sel" style="left: -399.109375px; top: 50px;"></select>`)
//line table_row.qtpl:127
			case col.InputType == "date" || col.InputType == "datetime":
//line table_row.qtpl:127
				qw422016.N().S(`<input type="date-range" data-name="`)
//line table_row.qtpl:128
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:128
				qw422016.N().S(`" onchange="filterTableData(this.value, 'table-col-`)
//line table_row.qtpl:128
				qw422016.N().D(i)
//line table_row.qtpl:128
				qw422016.N().S(`');"/>`)
//line table_row.qtpl:129
			default:
//line table_row.qtpl:129
				qw422016.N().S(`<input type="`)
//line table_row.qtpl:130
				qw422016.E().S(col.InputType)
//line table_row.qtpl:130
				qw422016.N().S(`" data-name="`)
//line table_row.qtpl:130
				qw422016.E().S(col.InputName(i))
//line table_row.qtpl:130
				qw422016.N().S(`" onchange="filterTableData(this.value, 'table-col-`)
//line table_row.qtpl:130
				qw422016.N().D(i)
//line table_row.qtpl:130
				qw422016.N().S(`');"/>`)
//line table_row.qtpl:131
			}
//line table_row.qtpl:132
		}
//line table_row.qtpl:132
		qw422016.N().S(`</div></div>`)
//line table_row.qtpl:135
	}
//line table_row.qtpl:135
	qw422016.N().S(`</div></div><div class="usr-table-content"><div class="usr-table-content-scroll">`)
//line table_row.qtpl:141
	t.StreamRenderRows(qw422016)
//line table_row.qtpl:141
	qw422016.N().S(`</div></div></div>`)
//line table_row.qtpl:145
}

//line table_row.qtpl:145
func (t *TableRender) WriteAllTable(qq422016 qtio422016.Writer) {
//line table_row.qtpl:145
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:145
	t.StreamAllTable(qw422016)
//line table_row.qtpl:145
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:145
}

//line table_row.qtpl:145
func (t *TableRender) AllTable() string {
//line table_row.qtpl:145
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:145
	t.WriteAllTable(qb422016)
//line table_row.qtpl:145
	qs422016 := string(qb422016.B)
//line table_row.qtpl:145
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:145
	return qs422016
//line table_row.qtpl:145
}

//line table_row.qtpl:146
func (t *TableRender) StreamRenderRowsStyles(qw422016 *qt422016.Writer, lSymb int, colLen, colDeep []int) {
//line table_row.qtpl:146
	qw422016.N().S(`<style>`)
//line table_row.qtpl:149
	allWidth := 0

//line table_row.qtpl:151
	for i, cLen := range colLen {
//line table_row.qtpl:153
		if t.columns[i].BasicType() == types.UnsafePointer && (cLen < 10*lSymb) {
			cLen = 10 * lSymb
		} else if (cLen > 50*lSymb) && (colDeep[i] == 1) {
			cLen = 50 * lSymb
		}
		allWidth += cLen

//line table_row.qtpl:160
		qw422016.N().S(`.table-col-`)
//line table_row.qtpl:161
		qw422016.N().D(i)
//line table_row.qtpl:161
		qw422016.N().S(`{min-width:`)
//line table_row.qtpl:162
		qw422016.N().D(cLen)
//line table_row.qtpl:162
		qw422016.N().S(`px;}//    .usr-table-row-cont > .usr-table-row > .table-col-`)
//line table_row.qtpl:164
		qw422016.N().D(i)
//line table_row.qtpl:164
		qw422016.N().S(`{//       text-align:`)
//line table_row.qtpl:165
		switch t.columns[i].InputType {

//line table_row.qtpl:166
		case "number":
//line table_row.qtpl:166
			qw422016.N().S(`center//`)
//line table_row.qtpl:167
		case "date", "datetime":
//line table_row.qtpl:167
			qw422016.N().S(`right//`)
//line table_row.qtpl:168
		default:
//line table_row.qtpl:168
			qw422016.N().S(`left//`)
//line table_row.qtpl:169
		}
//line table_row.qtpl:169
		qw422016.N().S(`;//    }`)
//line table_row.qtpl:171
	}
//line table_row.qtpl:171
	qw422016.N().S(`.table-custom, .usr-table-content {width:`)
//line table_row.qtpl:173
	qw422016.N().D(allWidth)
//line table_row.qtpl:173
	qw422016.N().S(`px;}</style>`)
//line table_row.qtpl:176
}

//line table_row.qtpl:176
func (t *TableRender) WriteRenderRowsStyles(qq422016 qtio422016.Writer, lSymb int, colLen, colDeep []int) {
//line table_row.qtpl:176
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:176
	t.StreamRenderRowsStyles(qw422016, lSymb, colLen, colDeep)
//line table_row.qtpl:176
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:176
}

//line table_row.qtpl:176
func (t *TableRender) RenderRowsStyles(lSymb int, colLen, colDeep []int) string {
//line table_row.qtpl:176
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:176
	t.WriteRenderRowsStyles(qb422016, lSymb, colLen, colDeep)
//line table_row.qtpl:176
	qs422016 := string(qb422016.B)
//line table_row.qtpl:176
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:176
	return qs422016
//line table_row.qtpl:176
}

//line table_row.qtpl:177
func StreamRenderTime(qw422016 *qt422016.Writer, i int, val time.Time) {
//line table_row.qtpl:178
	hour, min, sec := val.Clock()

//line table_row.qtpl:179
	if hour > 0 || min > 0 || sec > 0 {
//line table_row.qtpl:179
		qw422016.N().S(`<style> .usr-table-row-cont > .usr-table-row > .table-col-`)
//line table_row.qtpl:180
		qw422016.N().D(i)
//line table_row.qtpl:180
		qw422016.N().S(`{word-break: break-word;}</style>`)
//line table_row.qtpl:184
		if val.Location() == time.UTC {
//line table_row.qtpl:185
			qw422016.N().S(val.Format("2006-01-02 15:04:05"))
//line table_row.qtpl:186
		} else {
//line table_row.qtpl:187
			qw422016.N().S(val.Format("2006-01-02 15:04:05 Z-0700"))
//line table_row.qtpl:188
		}
//line table_row.qtpl:189
	} else {
//line table_row.qtpl:190
		qw422016.E().S(val.Format("2006-01-02"))
//line table_row.qtpl:191
	}
//line table_row.qtpl:192
}

//line table_row.qtpl:192
func WriteRenderTime(qq422016 qtio422016.Writer, i int, val time.Time) {
//line table_row.qtpl:192
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:192
	StreamRenderTime(qw422016, i, val)
//line table_row.qtpl:192
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:192
}

//line table_row.qtpl:192
func RenderTime(i int, val time.Time) string {
//line table_row.qtpl:192
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:192
	WriteRenderTime(qb422016, i, val)
//line table_row.qtpl:192
	qs422016 := string(qb422016.B)
//line table_row.qtpl:192
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:192
	return qs422016
//line table_row.qtpl:192
}

// func render Table rows{

//line table_row.qtpl:194
func (t *TableRender) StreamRenderRows(qw422016 *qt422016.Writer) {
//line table_row.qtpl:196
	colLen := make([]int, len(t.columns))
	colDeep := make([]int, len(t.columns))
	lSymb := 11
	for i, col := range t.columns {
		colLen[i] = len(col.Label) * lSymb
		colDeep[i] = 1
	}

//line table_row.qtpl:203
	qw422016.N().S(`<div class="usr-table-row-cont">`)
//line table_row.qtpl:205
	for _, row := range t.rows {
//line table_row.qtpl:205
		qw422016.N().S(`<div  class="usr-table-row">`)
//line table_row.qtpl:207
		for i, column := range t.columns {
//line table_row.qtpl:207
			qw422016.N().S(`<div class="usr-table-col  table-col-`)
//line table_row.qtpl:208
			qw422016.N().D(i)
//line table_row.qtpl:208
			qw422016.N().S(`">`)
//line table_row.qtpl:209
			switch val := row[i].(type) {
//line table_row.qtpl:210
			case time.Time:
//line table_row.qtpl:210
				qw422016.N().S(RenderTime(i, val))
//line table_row.qtpl:211
			case string:
//line table_row.qtpl:212
				qw422016.N().S(val)
//line table_row.qtpl:214
				lenVal := lSymb
				s := regHTML.FindString(val)
				if len(s) > 0 {
					lenVal *= len(s)
				} else {
					lenVal *= len(val)
				}

				if lenVal > colLen[i] && (column.Name() != "id") {
					colLen[i] = lenVal
				}

//line table_row.qtpl:226
			case bool:
//line table_row.qtpl:227
				if val {
//line table_row.qtpl:227
					qw422016.N().S(`<svg xmlns="http://www.w3.org/2000/svg" height="24" width="24"><path d="m10.6 16.6 7.05-7.05-1.4-1.4-5.65 5.65-2.85-2.85-1.4 1.4ZM12 22q-2.075 0-3.9-.788-1.825-.787-3.175-2.137-1.35-1.35-2.137-3.175Q2 14.075 2 12t.788-3.9q.787-1.825 2.137-3.175 1.35-1.35 3.175-2.138Q9.925 2 12 2t3.9.787q1.825.788 3.175 2.138 1.35 1.35 2.137 3.175Q22 9.925 22 12t-.788 3.9q-.787 1.825-2.137 3.175-1.35 1.35-3.175 2.137Q14.075 22 12 22Zm0-2q3.35 0 5.675-2.325Q20 15.35 20 12q0-3.35-2.325-5.675Q15.35 4 12 4 8.65 4 6.325 6.325 4 8.65 4 12q0 3.35 2.325 5.675Q8.65 20 12 20Zm0-8Z"/></svg>`)
//line table_row.qtpl:229
				}
//line table_row.qtpl:230
			case int, int32, int64:
//line table_row.qtpl:231
				s := fmt.Sprintf("%v", val)
				if lenVal := (len(s) + 2) * lSymb; lenVal > colLen[i] {
					colLen[i] = lenVal
				}

//line table_row.qtpl:236
				qw422016.E().S(s)
//line table_row.qtpl:237
			case float32:
//line table_row.qtpl:237
				qw422016.N().V(val)
//line table_row.qtpl:238
			case float64:
//line table_row.qtpl:238
				qw422016.N().FPrec(val, 2)
//line table_row.qtpl:239
			case []string:
//line table_row.qtpl:241
				for _, str := range val {
//line table_row.qtpl:241
					qw422016.N().S(`<p>`)
//line table_row.qtpl:242
					qw422016.N().S(str)
//line table_row.qtpl:242
					qw422016.N().S(`</p>`)
//line table_row.qtpl:244
					lenVal := lSymb * (len(str) + 2)
					if lenVal > colLen[i] {
						colLen[i] = lenVal
					}

//line table_row.qtpl:249
				}
//line table_row.qtpl:251
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

//line table_row.qtpl:256
			case []int32:
//line table_row.qtpl:257
				for _, val := range val {
//line table_row.qtpl:257
					qw422016.N().S(`<p>`)
//line table_row.qtpl:258
					qw422016.N().V(val)
//line table_row.qtpl:258
					qw422016.N().S(`</p>`)
//line table_row.qtpl:259
				}
//line table_row.qtpl:261
			case []int64:
//line table_row.qtpl:262
				for _, val := range val {
//line table_row.qtpl:262
					qw422016.N().S(`<p>`)
//line table_row.qtpl:263
					qw422016.N().V(val)
//line table_row.qtpl:263
					qw422016.N().S(`</p>`)
//line table_row.qtpl:264
				}
//line table_row.qtpl:266
			case []float32:
//line table_row.qtpl:267
				for _, val := range val {
//line table_row.qtpl:267
					qw422016.N().S(`<p>`)
//line table_row.qtpl:268
					qw422016.N().V(val)
//line table_row.qtpl:268
					qw422016.N().S(`</p>`)
//line table_row.qtpl:269
				}
//line table_row.qtpl:271
			case []float64:
//line table_row.qtpl:272
				for _, val := range val {
//line table_row.qtpl:272
					qw422016.N().S(`<p>`)
//line table_row.qtpl:273
					qw422016.N().V(val)
//line table_row.qtpl:273
					qw422016.N().S(`</p>`)
//line table_row.qtpl:274
				}
//line table_row.qtpl:276
			case map[string]string:
//line table_row.qtpl:276
				qw422016.N().S(`<table>`)
//line table_row.qtpl:280
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

				sortList := make([]string, 0, len(val))
				for name := range val {
					sortList = append(sortList, name)
				}
				sort.Strings(sortList)

//line table_row.qtpl:290
				for _, key := range sortList {
//line table_row.qtpl:290
					qw422016.N().S(`<tr><td><b>`)
//line table_row.qtpl:291
					qw422016.N().S(key)
//line table_row.qtpl:291
					qw422016.N().S(`</b></td><td>`)
//line table_row.qtpl:291
					qw422016.N().S(val[key])
//line table_row.qtpl:291
					qw422016.N().S(`</td></tr>`)
//line table_row.qtpl:293
					lenVal := (lSymb+2)*len(key) + lSymb*len(val[key]) + 2
					if lenVal > colLen[i] {
						colLen[i] = lenVal
					}

//line table_row.qtpl:298
				}
//line table_row.qtpl:298
				qw422016.N().S(`</table>`)
//line table_row.qtpl:301
			case map[string]any:
//line table_row.qtpl:304
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

				sortList := make([]string, 0, len(val))
				for name := range val {
					sortList = append(sortList, name)
				}
				sort.Strings(sortList)

//line table_row.qtpl:314
				for _, key := range sortList {
//line table_row.qtpl:314
					qw422016.N().S(`<b>`)
//line table_row.qtpl:315
					qw422016.N().S(key)
//line table_row.qtpl:315
					qw422016.N().S(`</b>:`)
//line table_row.qtpl:315
					json.StreamElement(qw422016, val[key])
//line table_row.qtpl:315
					qw422016.N().S(`<br>`)
//line table_row.qtpl:316
				}
//line table_row.qtpl:318
			case []any:
//line table_row.qtpl:320
				if colDeep[i] < len(val) {
					colDeep[i] = len(val)
				}

//line table_row.qtpl:324
				for _, value := range val {
//line table_row.qtpl:326
					if m, ok := value.(map[string]any); ok {
//line table_row.qtpl:326
						qw422016.N().S(`<p>`)
//line table_row.qtpl:328
						for key, value := range m {
//line table_row.qtpl:328
							qw422016.N().S(`<b>`)
//line table_row.qtpl:329
							qw422016.E().S(key)
//line table_row.qtpl:329
							qw422016.N().S(`</b>:`)
//line table_row.qtpl:329
							json.StreamElement(qw422016, value)
//line table_row.qtpl:329
							qw422016.N().S(`<br>`)
//line table_row.qtpl:330
						}
//line table_row.qtpl:330
						qw422016.N().S(`</p>`)
//line table_row.qtpl:332
					} else {
//line table_row.qtpl:333
						json.StreamElement(qw422016, value)
//line table_row.qtpl:334
					}
//line table_row.qtpl:336
				}
//line table_row.qtpl:337
			default:
//line table_row.qtpl:338
				json.StreamElement(qw422016, row[i])
//line table_row.qtpl:339
			}
//line table_row.qtpl:339
			qw422016.N().S(`</div>`)
//line table_row.qtpl:341
		}
//line table_row.qtpl:341
		qw422016.N().S(`</div>`)
//line table_row.qtpl:344
	}
//line table_row.qtpl:344
	qw422016.N().S(`</div>`)
//line table_row.qtpl:346
	t.StreamRenderRowsStyles(qw422016, lSymb, colLen, colDeep)
//line table_row.qtpl:346
	qw422016.N().S(`<script>SetTableEvents()</script>`)
//line table_row.qtpl:350
}

//line table_row.qtpl:350
func (t *TableRender) WriteRenderRows(qq422016 qtio422016.Writer) {
//line table_row.qtpl:350
	qw422016 := qt422016.AcquireWriter(qq422016)
//line table_row.qtpl:350
	t.StreamRenderRows(qw422016)
//line table_row.qtpl:350
	qt422016.ReleaseWriter(qw422016)
//line table_row.qtpl:350
}

//line table_row.qtpl:350
func (t *TableRender) RenderRows() string {
//line table_row.qtpl:350
	qb422016 := qt422016.AcquireByteBuffer()
//line table_row.qtpl:350
	t.WriteRenderRows(qb422016)
//line table_row.qtpl:350
	qs422016 := string(qb422016.B)
//line table_row.qtpl:350
	qt422016.ReleaseByteBuffer(qb422016)
//line table_row.qtpl:350
	return qs422016
//line table_row.qtpl:350
}

// }
