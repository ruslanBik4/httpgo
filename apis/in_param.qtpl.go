/*
 * Copyright (c) 2022. Author: Ruslan Bikchentaev. All rights reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file.
 * Перший приватний програміст.
 */

// Code generated by qtc from "in_param.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line in_param.qtpl:1
package apis

//line in_param.qtpl:1
import (
	"go/types"

	jsoniter "github.com/json-iterator/go"

	"github.com/ruslanBik4/httpgo/typesExt"
	"github.com/ruslanBik4/httpgo/views/templates/json"
	"github.com/ruslanBik4/logs"
)

//line in_param.qtpl:13
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line in_param.qtpl:13
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line in_param.qtpl:14
type qInParam struct {
	in string
}

func NewqInParam(in string) *qInParam {
	return &qInParam{
		in: in,
	}
}

//line in_param.qtpl:24
func (q *qInParam) StreamSwaggerParams(qw422016 *qt422016.Writer, params []any) {
//line in_param.qtpl:24
	qw422016.N().S(`"parameters": [
`)
//line in_param.qtpl:26
	for i, p := range params {
//line in_param.qtpl:27
		if i > 0 {
//line in_param.qtpl:27
			qw422016.N().S(`, `)
//line in_param.qtpl:27
		}
//line in_param.qtpl:27
		qw422016.N().S(`
	{
`)
//line in_param.qtpl:29
		if param, ok := p.(InParam); ok {
//line in_param.qtpl:30
			if t, ok := param.Type.(jsoniter.ValEncoder); ok {
//line in_param.qtpl:32
				s, err := jsoniter.MarshalToString(t)
				if err != nil {
					logs.ErrorLog(err)
				}

//line in_param.qtpl:36
				qw422016.N().S(`    	`)
//line in_param.qtpl:37
				qw422016.E().S(s)
//line in_param.qtpl:37
				qw422016.N().S(`
`)
//line in_param.qtpl:38
			} else {
//line in_param.qtpl:38
				qw422016.N().S(`		"name": "`)
//line in_param.qtpl:39
				qw422016.E().S(param.Name)
//line in_param.qtpl:39
				qw422016.N().S(`",
		"description": "`)
//line in_param.qtpl:40
				qw422016.E().S(param.Desc)
//line in_param.qtpl:40
				qw422016.N().S(`",
		"in":   "`)
//line in_param.qtpl:41
				qw422016.E().S(q.in)
//line in_param.qtpl:41
				qw422016.N().S(`",
		"type":`)
//line in_param.qtpl:42
				switch t, ok := (param.Type).(TypeInParam); {
				// {

//line in_param.qtpl:43
				case ok && t.BasicKind == types.Bool:
//line in_param.qtpl:43
					qw422016.N().S(`					"boolean"
`)
//line in_param.qtpl:45
				case ok && t.BasicKind > types.Bool && t.BasicKind < types.Float32:
//line in_param.qtpl:45
					qw422016.N().S(`					"integer",
		"format": 	"`)
//line in_param.qtpl:47
					t.StreamFormat(qw422016)
//line in_param.qtpl:47
					qw422016.N().S(`"
`)
//line in_param.qtpl:48
				case ok && (t.BasicKind == types.Float32 || t.BasicKind == types.Float64):
//line in_param.qtpl:48
					qw422016.N().S(`					"number",
		"format": 	"`)
//line in_param.qtpl:50
					t.StreamFormat(qw422016)
//line in_param.qtpl:50
					qw422016.N().S(`"
`)
//line in_param.qtpl:51
				case ok && t.BasicKind == types.String:
//line in_param.qtpl:51
					qw422016.N().S(`					"array[string]",
		"format": 	"string"
`)
//line in_param.qtpl:54
				case ok && t.BasicKind > types.UnsafePointer:
//line in_param.qtpl:54
					qw422016.N().S(`					"untyped",
		"format": 	"`)
//line in_param.qtpl:56
					t.StreamFormat(qw422016)
//line in_param.qtpl:56
					qw422016.N().S(`"
`)
//line in_param.qtpl:57
				case ok && t.BasicKind == typesExt.TStruct:
//line in_param.qtpl:57
					qw422016.N().S(`					"`)
//line in_param.qtpl:58
					t.StreamRequestType(qw422016)
//line in_param.qtpl:58
					qw422016.N().S(`",
		"format":   "`)
//line in_param.qtpl:59
					t.StreamFormat(qw422016)
//line in_param.qtpl:59
					qw422016.N().S(`"
`)
//line in_param.qtpl:60
				case ok:
//line in_param.qtpl:60
					qw422016.N().S(`					"`)
//line in_param.qtpl:61
					t.StreamFormat(qw422016)
//line in_param.qtpl:61
					qw422016.N().S(`",
		"format": 	"`)
//line in_param.qtpl:62
					t.StreamFormat(qw422016)
//line in_param.qtpl:62
					qw422016.N().S(`"
`)
//line in_param.qtpl:63
				default:
//line in_param.qtpl:63
					qw422016.N().S(`					"`)
//line in_param.qtpl:64
					qw422016.E().V(param.Type)
//line in_param.qtpl:64
					qw422016.N().S(`",
		"format": 	"`)
//line in_param.qtpl:65
					qw422016.E().V(param.Type)
//line in_param.qtpl:65
					qw422016.N().S(`"
`)
//line in_param.qtpl:66
				}
//line in_param.qtpl:66
				qw422016.N().S(`,

`)
//line in_param.qtpl:68
			}
//line in_param.qtpl:69
		} else {
//line in_param.qtpl:69
			qw422016.N().S(`        `)
//line in_param.qtpl:70
			json.StreamWrap(qw422016, p)
//line in_param.qtpl:70
			qw422016.N().S(`
`)
//line in_param.qtpl:71
		}
//line in_param.qtpl:71
		qw422016.N().S(`    }
`)
//line in_param.qtpl:73
	}
//line in_param.qtpl:73
	qw422016.N().S(`]
`)
//line in_param.qtpl:75
}

//line in_param.qtpl:75
func (q *qInParam) WriteSwaggerParams(qq422016 qtio422016.Writer, params []any) {
//line in_param.qtpl:75
	qw422016 := qt422016.AcquireWriter(qq422016)
//line in_param.qtpl:75
	q.StreamSwaggerParams(qw422016, params)
//line in_param.qtpl:75
	qt422016.ReleaseWriter(qw422016)
//line in_param.qtpl:75
}

//line in_param.qtpl:75
func (q *qInParam) SwaggerParams(params []any) string {
//line in_param.qtpl:75
	qb422016 := qt422016.AcquireByteBuffer()
//line in_param.qtpl:75
	q.WriteSwaggerParams(qb422016, params)
//line in_param.qtpl:75
	qs422016 := string(qb422016.B)
//line in_param.qtpl:75
	qt422016.ReleaseByteBuffer(qb422016)
//line in_param.qtpl:75
	return qs422016
//line in_param.qtpl:75
}

//line in_param.qtpl:76
func StreamBearer(qw422016 *qt422016.Writer, desc string) {
//line in_param.qtpl:76
	qw422016.N().S(`"components": {
  "securitySchemes": {
	"auth":{
	  "name": "auth",
	  "in": "header",
	  "description": "`)
//line in_param.qtpl:82
	qw422016.E().J(desc)
//line in_param.qtpl:82
	qw422016.N().S(`",
	  "type": "http",
	  "scheme": "bearer",
	  "bearerFormat": "JWT",
	  "url": "/auth"
	}
  }
}
`)
//line in_param.qtpl:90
}

//line in_param.qtpl:90
func WriteBearer(qq422016 qtio422016.Writer, desc string) {
//line in_param.qtpl:90
	qw422016 := qt422016.AcquireWriter(qq422016)
//line in_param.qtpl:90
	StreamBearer(qw422016, desc)
//line in_param.qtpl:90
	qt422016.ReleaseWriter(qw422016)
//line in_param.qtpl:90
}

//line in_param.qtpl:90
func Bearer(desc string) string {
//line in_param.qtpl:90
	qb422016 := qt422016.AcquireByteBuffer()
//line in_param.qtpl:90
	WriteBearer(qb422016, desc)
//line in_param.qtpl:90
	qs422016 := string(qb422016.B)
//line in_param.qtpl:90
	qt422016.ReleaseByteBuffer(qb422016)
//line in_param.qtpl:90
	return qs422016
//line in_param.qtpl:90
}

//line in_param.qtpl:91
func StreamSecurity(qw422016 *qt422016.Writer, desc string) {
//line in_param.qtpl:91
	qw422016.N().S(`"security": [
  "auth":  "JWT"
]
`)
//line in_param.qtpl:95
}

//line in_param.qtpl:95
func WriteSecurity(qq422016 qtio422016.Writer, desc string) {
//line in_param.qtpl:95
	qw422016 := qt422016.AcquireWriter(qq422016)
//line in_param.qtpl:95
	StreamSecurity(qw422016, desc)
//line in_param.qtpl:95
	qt422016.ReleaseWriter(qw422016)
//line in_param.qtpl:95
}

//line in_param.qtpl:95
func Security(desc string) string {
//line in_param.qtpl:95
	qb422016 := qt422016.AcquireByteBuffer()
//line in_param.qtpl:95
	WriteSecurity(qb422016, desc)
//line in_param.qtpl:95
	qs422016 := string(qb422016.B)
//line in_param.qtpl:95
	qt422016.ReleaseByteBuffer(qb422016)
//line in_param.qtpl:95
	return qs422016
//line in_param.qtpl:95
}
