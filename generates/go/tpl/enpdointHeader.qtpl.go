/*
 * Copyright (c) 2022. Author: Ruslan Bikchentaev. All rights reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file.
 * Першій пріватний програміст.
 */

// Code generated by qtc from "enpdointHeader.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line enpdointHeader.qtpl:3
package tpl

//line enpdointHeader.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line enpdointHeader.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line enpdointHeader.qtpl:4
type enpdointHeader struct {
}

func NewenpdointHeader() *enpdointHeader {
	return &enpdointHeader{}
}

//line enpdointHeader.qtpl:13
func StreamHead(qw422016 *qt422016.Writer, crud, unSafe bool) {
//line enpdointHeader.qtpl:13
	qw422016.N().S(`
// Code generated by httpgo-gen-go. DO NOT EDIT.
// versions:
// 	httpgo v1.2.2
// source: %s %s
package db

import (
	"fmt"
	"bytes"
`)
//line enpdointHeader.qtpl:23
	if unSafe {
//line enpdointHeader.qtpl:23
		qw422016.N().S(`"unsafe"
	`)
//line enpdointHeader.qtpl:24
	}
//line enpdointHeader.qtpl:24
	qw422016.N().S(`
	"github.com/valyala/fasthttp"
	"github.com/valyala/fastjson"

	"github.com/ruslanBik4/httpgo/apis"
	"github.com/ruslanBik4/logs"
	"github.com/ruslanBik4/dbEngine/dbEngine"
	"github.com/ruslanBik4/httpgo/apis/crud"
`)
//line enpdointHeader.qtpl:32
	if crud {
//line enpdointHeader.qtpl:32
	}
//line enpdointHeader.qtpl:32
	qw422016.N().S(`
	"github.com/pkg/errors"
)


`)
//line enpdointHeader.qtpl:37
}

//line enpdointHeader.qtpl:37
func WriteHead(qq422016 qtio422016.Writer, crud, unSafe bool) {
//line enpdointHeader.qtpl:37
	qw422016 := qt422016.AcquireWriter(qq422016)
//line enpdointHeader.qtpl:37
	StreamHead(qw422016, crud, unSafe)
//line enpdointHeader.qtpl:37
	qt422016.ReleaseWriter(qw422016)
//line enpdointHeader.qtpl:37
}

//line enpdointHeader.qtpl:37
func Head(crud, unSafe bool) string {
//line enpdointHeader.qtpl:37
	qb422016 := qt422016.AcquireByteBuffer()
//line enpdointHeader.qtpl:37
	WriteHead(qb422016, crud, unSafe)
//line enpdointHeader.qtpl:37
	qs422016 := string(qb422016.B)
//line enpdointHeader.qtpl:37
	qt422016.ReleaseByteBuffer(qb422016)
//line enpdointHeader.qtpl:37
	return qs422016
//line enpdointHeader.qtpl:37
}
